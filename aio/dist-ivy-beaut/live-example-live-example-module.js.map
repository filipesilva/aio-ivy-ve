{"version":3,"sources":["./src/app/shared/attribute-utils.ts","./src/app/custom-elements/live-example/live-example.component.ts.pre-build-optimizer.js","./src/app/custom-elements/live-example/live-example.component.html","./src/app/custom-elements/live-example/live-example.component.ts","./src/app/custom-elements/live-example/live-example.module.ts","./src/app/custom-elements/live-example/live-example.module.ts.pre-build-optimizer.js"],"names":["getAttrValue","attrs","attr","key","find","a","hasOwnProperty","toLowerCase","undefined","boolFromValue","attrValue","def","trim","_c0","LiveExampleComponent_span_4_p_3_Template","rf","ctx","ctx_r118","LiveExampleComponent_span_4_Template","ctx_r115","title","LiveExampleComponent_span_5_Template","ctx_r116","LiveExampleComponent_span_6_span_3_Template","ctx_r119","LiveExampleComponent_span_6_Template","ctx_r117","_c1","_c2","LIVE_EXAMPLE_BASE","ZIP_BASE","LiveExampleComponent","elementRef","location","el","nativeElement","attributes","attrMap","name","value","getAttrs","exampleDir","this","getExampleDir","path","stackblitzName","getStackblitzName","mode","getMode","enableDownload","getEnableDownload","stackblitz","getStackblitz","zip","getZip","getTitle","textContent","content","match","downloadOnly","isEmbedded","zipName","split","ɵfac","t","ɵcmp","type","_t","first","ngContentSelectors","decls","vars","consts","template","directives","EmbeddedStackblitzComponent","iframe","src","inputs","styles","LiveExampleModule","customElementComponent","ɵmod","ɵinj","factory"],"mappings":"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","file":"live-example-live-example-module.js","sourcesContent":["// Utilities for processing HTML element attributes\nimport { ElementRef } from '@angular/core';\n\nexport interface AttrMap {\n  [key: string]: string;\n}\n\n/**\n * Get attribute map from element or ElementRef `attributes`.\n * Attribute map keys are forced lowercase for case-insensitive lookup.\n * @param el The source of the attributes.\n */\nexport function getAttrs(el: HTMLElement | ElementRef): AttrMap {\n  const attrs: NamedNodeMap = el instanceof ElementRef ? el.nativeElement.attributes : el.attributes;\n  const attrMap: AttrMap = {};\n  for (const attr of attrs as any as Attr[] /* cast due to https://github.com/Microsoft/TypeScript/issues/2695 */) {\n    attrMap[attr.name.toLowerCase()] = attr.value;\n  }\n  return attrMap;\n}\n\n/**\n * Return the attribute that matches `attr`.\n * @param attr Name of the attribute or a string of candidate attribute names.\n */\nexport function getAttrValue(attrs: AttrMap, attr: string | string[]): string | undefined {\n  const key = (typeof attr === 'string')\n      ? attr\n      : attr.find(a => attrs.hasOwnProperty(a.toLowerCase()));\n\n  return (key === undefined) ? undefined : attrs[key.toLowerCase()];\n}\n\n/**\n * Return the boolean state of an attribute value (if supplied)\n * @param attrValue The string value of some attribute (or undefined if attribute not present).\n * @param def Default boolean value when attribute is undefined.\n */\nexport function boolFromValue(attrValue: string | undefined, def: boolean = false) {\n  return attrValue === undefined ? def : attrValue.trim() !== 'false';\n}\n\n/**\n * Return the boolean state of attribute from an element\n * @param el The source of the attributes.\n * @param atty Name of the attribute or a string of candidate attribute names.\n * @param def Default boolean value when attribute is undefined.\n */\nexport function getBoolFromAttribute(\n  el: HTMLElement | ElementRef,\n  attr: string | string[],\n  def: boolean = false): boolean {\n  return boolFromValue(getAttrValue(getAttrs(el), attr), def);\n}\n","/* tslint:disable component-selector */\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"content\"];\nfunction LiveExampleComponent_span_4_p_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" You can also \");\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵtext(3, \"download this example\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \". \");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r118 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r118.zip, i0.ɵɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"aio-embedded-stackblitz\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LiveExampleComponent_span_4_p_3_Template, 5, 1, \"p\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r115 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r115.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r115.stackblitz);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r115.enableDownload);\n} }\nfunction LiveExampleComponent_span_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"a\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r116 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r116.title);\n    i0.ɵɵproperty(\"href\", ctx_r116.zip, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r116.title);\n} }\nfunction LiveExampleComponent_span_6_span_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" / \");\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵtext(3, \"download example\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r119 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r119.zip, i0.ɵɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"a\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LiveExampleComponent_span_6_span_3_Template, 4, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r117 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r117.title);\n    i0.ɵɵproperty(\"href\", ctx_r117.stackblitz, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r117.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r117.enableDownload);\n} }\nconst _c1 = [\"*\"];\nconst _c2 = [\"iframe\"];\nconst LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nconst ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\nexport class LiveExampleComponent {\n    constructor(elementRef, location) {\n        const attrs = getAttrs(elementRef);\n        const exampleDir = this.getExampleDir(attrs, location.path(false));\n        const stackblitzName = this.getStackblitzName(attrs);\n        this.mode = this.getMode(attrs);\n        this.enableDownload = this.getEnableDownload(attrs);\n        this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n        this.zip = this.getZip(exampleDir, stackblitzName);\n        this.title = this.getTitle(attrs);\n    }\n    ngAfterContentInit() {\n        // Angular will sanitize this title when displayed, so it should be plain text.\n        const textContent = this.content.nativeElement.textContent.trim();\n        if (textContent) {\n            this.title = textContent;\n        }\n    }\n    getEnableDownload(attrs) {\n        const downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n        return !downloadDisabled;\n    }\n    getExampleDir(attrs, path) {\n        let exampleDir = getAttrValue(attrs, 'name');\n        if (!exampleDir) {\n            // Take the last path segment, excluding query params and hash fragment.\n            const match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n            exampleDir = match ? match[0] : 'index';\n        }\n        return exampleDir.trim();\n    }\n    getMode(attrs) {\n        const downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n        const isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n        return downloadOnly ? 'downloadOnly'\n            : isEmbedded ? 'embedded' :\n                'default';\n    }\n    getStackblitz(exampleDir, stackblitzName, isEmbedded) {\n        const urlQuery = isEmbedded ? '?ctl=1' : '';\n        return `${LIVE_EXAMPLE_BASE}${exampleDir}/${stackblitzName}stackblitz.html${urlQuery}`;\n    }\n    getStackblitzName(attrs) {\n        const attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n        return attrValue && `${attrValue}.`;\n    }\n    getTitle(attrs) {\n        return (getAttrValue(attrs, 'title') || 'live example').trim();\n    }\n    getZip(exampleDir, stackblitzName) {\n        const zipName = exampleDir.split('/')[0];\n        return `${ZIP_BASE}${exampleDir}/${stackblitzName}${zipName}.zip`;\n    }\n}\nLiveExampleComponent.ɵfac = function LiveExampleComponent_Factory(t) { return new (t || LiveExampleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Location)); };\nLiveExampleComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LiveExampleComponent, selectors: [[\"live-example\"]], viewQuery: function LiveExampleComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.content = _t.first);\n    } }, ngContentSelectors: _c1, decls: 7, vars: 3, consts: [[2, \"display\", \"none\"], [\"content\", \"\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"title\"], [3, \"src\"], [4, \"ngIf\"], [\"download\", \"\", \"title\", \"Download example\", 3, \"href\"], [\"download\", \"\", 3, \"href\", \"title\"], [\"target\", \"_blank\", 3, \"href\", \"title\"]], template: function LiveExampleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"span\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtemplate(4, LiveExampleComponent_span_4_Template, 4, 3, \"span\", 3);\n        i0.ɵɵtemplate(5, LiveExampleComponent_span_5_Template, 3, 3, \"span\", 3);\n        i0.ɵɵtemplate(6, LiveExampleComponent_span_6_Template, 4, 4, \"span\", 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.mode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"embedded\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"downloadOnly\");\n    } }, directives: function () { return [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, EmbeddedStackblitzComponent, i1.NgIf]; }, encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LiveExampleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'live-example',\n                templateUrl: 'live-example.component.html'\n            }]\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.Location }]; }, { content: [{\n            type: ViewChild,\n            args: ['content', { static: true }]\n        }] });\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\nexport class EmbeddedStackblitzComponent {\n    ngAfterViewInit() {\n        // DEVELOPMENT TESTING ONLY\n        // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n        if (this.iframe) {\n            // security: the `src` is always authored by the documentation team\n            // and is considered to be safe\n            this.iframe.nativeElement.src = this.src;\n        }\n    }\n}\nEmbeddedStackblitzComponent.ɵfac = function EmbeddedStackblitzComponent_Factory(t) { return new (t || EmbeddedStackblitzComponent)(); };\nEmbeddedStackblitzComponent.ɵcmp = i0.ɵɵdefineComponent({ type: EmbeddedStackblitzComponent, selectors: [[\"aio-embedded-stackblitz\"]], viewQuery: function EmbeddedStackblitzComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.iframe = _t.first);\n    } }, inputs: { src: \"src\" }, decls: 2, vars: 0, consts: [[\"frameborder\", \"0\", \"width\", \"100%\", \"height\", \"100%\"], [\"iframe\", \"\"]], template: function EmbeddedStackblitzComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"iframe\", 0, 1);\n    } }, styles: [\"iframe[_ngcontent-%COMP%] { min-height: 400px; }\"] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(EmbeddedStackblitzComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-embedded-stackblitz',\n                template: `<iframe #iframe frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>`,\n                styles: ['iframe { min-height: 400px; }']\n            }]\n    }], null, { src: [{\n            type: Input\n        }], iframe: [{\n            type: ViewChild,\n            args: ['iframe', { static: true }]\n        }] });\n","<!-- Content projection is used to get the content HTML provided to the component. -->\n<span #content style=\"display: none\"><ng-content></ng-content></span>\n\n<span [ngSwitch]=\"mode\">\n  <span *ngSwitchCase=\"'embedded'\">\n    <div title=\"{{title}}\">\n      <aio-embedded-stackblitz [src]=\"stackblitz\"></aio-embedded-stackblitz>\n    </div>\n    <p *ngIf=\"enableDownload\">\n      You can also <a [href]=\"zip\" download title=\"Download example\">download this example</a>.\n    </p>\n  </span>\n  <span *ngSwitchCase=\"'downloadOnly'\">\n    <a [href]=\"zip\" download title=\"{{title}}\">{{title}}</a>\n  </span>\n  <span *ngSwitchDefault>\n    <a [href]=\"stackblitz\" target=\"_blank\" title=\"{{title}}\">{{title}}</a>\n    <span *ngIf=\"enableDownload\">\n      / <a [href]=\"zip\" download title=\"Download example\">download example</a>\n    </span>\n  </span>\n</span>\n","/* tslint:disable component-selector */\nimport { AfterContentInit, AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { AttrMap, boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\n\n\nconst LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nconst ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\n@Component({\n  selector: 'live-example',\n  templateUrl: 'live-example.component.html'\n})\nexport class LiveExampleComponent implements AfterContentInit {\n\n  readonly mode: 'default' | 'embedded' | 'downloadOnly';\n  readonly enableDownload: boolean;\n  readonly stackblitz: string;\n  readonly zip: string;\n  title: string;\n\n  @ViewChild('content', { static: true })\n  private content: ElementRef;\n\n  constructor(elementRef: ElementRef, location: Location) {\n    const attrs = getAttrs(elementRef);\n    const exampleDir = this.getExampleDir(attrs, location.path(false));\n    const stackblitzName = this.getStackblitzName(attrs);\n\n    this.mode = this.getMode(attrs);\n    this.enableDownload = this.getEnableDownload(attrs);\n    this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n    this.zip = this.getZip(exampleDir, stackblitzName);\n    this.title = this.getTitle(attrs);\n  }\n\n  ngAfterContentInit() {\n    // Angular will sanitize this title when displayed, so it should be plain text.\n    const textContent = this.content.nativeElement.textContent.trim();\n    if (textContent) {\n      this.title = textContent;\n    }\n  }\n\n  private getEnableDownload(attrs: AttrMap) {\n    const downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n    return !downloadDisabled;\n  }\n\n  private getExampleDir(attrs: AttrMap, path: string) {\n    let exampleDir = getAttrValue(attrs, 'name');\n    if (!exampleDir) {\n      // Take the last path segment, excluding query params and hash fragment.\n      const match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n      exampleDir = match ? match[0] : 'index';\n    }\n    return exampleDir.trim();\n  }\n\n  private getMode(this: LiveExampleComponent, attrs: AttrMap): typeof this.mode {\n    const downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n    const isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n\n    return downloadOnly ? 'downloadOnly'\n           : isEmbedded ? 'embedded' :\n                          'default';\n  }\n\n  private getStackblitz(exampleDir: string, stackblitzName: string, isEmbedded: boolean) {\n    const urlQuery = isEmbedded ? '?ctl=1' : '';\n    return `${LIVE_EXAMPLE_BASE}${exampleDir}/${stackblitzName}stackblitz.html${urlQuery}`;\n  }\n\n  private getStackblitzName(attrs: AttrMap) {\n    const attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n    return attrValue && `${attrValue}.`;\n  }\n\n  private getTitle(attrs: AttrMap) {\n    return (getAttrValue(attrs, 'title') || 'live example').trim();\n  }\n\n  private getZip(exampleDir: string, stackblitzName: string) {\n    const zipName = exampleDir.split('/')[0];\n    return `${ZIP_BASE}${exampleDir}/${stackblitzName}${zipName}.zip`;\n  }\n}\n\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\n@Component({\n  selector: 'aio-embedded-stackblitz',\n  template: `<iframe #iframe frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>`,\n  styles: [ 'iframe { min-height: 400px; }' ]\n})\nexport class EmbeddedStackblitzComponent implements AfterViewInit {\n  @Input() src: string;\n\n  @ViewChild('iframe', { static: true }) iframe: ElementRef;\n\n  ngAfterViewInit() {\n    // DEVELOPMENT TESTING ONLY\n    // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n\n    if (this.iframe) {\n      // security: the `src` is always authored by the documentation team\n      // and is considered to be safe\n      this.iframe.nativeElement.src = this.src;\n    }\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ LiveExampleComponent, EmbeddedStackblitzComponent ],\n  entryComponents: [ LiveExampleComponent ]\n})\nexport class LiveExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = LiveExampleComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport * as i0 from \"@angular/core\";\nexport class LiveExampleModule {\n    constructor() {\n        this.customElementComponent = LiveExampleComponent;\n    }\n}\nLiveExampleModule.ɵmod = i0.ɵɵdefineNgModule({ type: LiveExampleModule });\nLiveExampleModule.ɵinj = i0.ɵɵdefineInjector({ factory: function LiveExampleModule_Factory(t) { return new (t || LiveExampleModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(LiveExampleModule, { declarations: [LiveExampleComponent, EmbeddedStackblitzComponent], imports: [CommonModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LiveExampleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LiveExampleComponent, EmbeddedStackblitzComponent],\n                entryComponents: [LiveExampleComponent]\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}