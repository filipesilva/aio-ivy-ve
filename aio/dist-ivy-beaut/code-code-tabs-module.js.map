{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js.pre-build-optimizer.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js.pre-build-optimizer.js","./src/app/custom-elements/code/code-tabs.component.ts.pre-build-optimizer.js","./src/app/custom-elements/code/code-tabs.component.ts","./src/app/custom-elements/code/code-tabs.module.ts","./src/app/custom-elements/code/code-tabs.module.ts.pre-build-optimizer.js"],"names":["_c11","_c12","_c13","MatCard","_animationMode","this","ɵfac","t","ɵcmp","type","selectors","hostBindings","rf","ctx","elIndex","exportAs","ngContentSelectors","decls","vars","template","styles","encapsulation","changeDetection","MatCardModule","ɵmod","ɵinj","factory","imports","MatTab_ng_template_0_Template","MatTabBody_ng_template_2_Template","a0","animationDuration","a1","value","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","tab_r22","$implicit","templateLabel","MatTabGroup_div_2_ng_template_3_Template","textLabel","MatTabGroup_div_2_Template","_r30","$event","i_r23","index","ctx_r29","_r18","_handleClick","ctx_r19","selectedIndex","_getTabLabelId","disabled","disableRipple","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","MatTabGroup_mat_tab_body_5_Template","_r34","_removeTabBodyWrapperHeight","_setTabBodyWrapperHeight","tab_r31","i_r32","ctx_r21","content","position","origin","_MAT_INK_BAR_POSITIONER","providedIn","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","positions","inkBar","ɵdir","MatTabContent","MatTabLabel","ɵMatTabLabel_BaseFactory","features","MatTabBase","_MatTabMixinBase","MatTab","_viewContainerRef","super","_contentPortal","_stateChanges","Subject","isActive","changes","hasOwnProperty","next","complete","_explicitContent","_implicitContent","contentQueries","dirIndex","_t","first","viewQuery","inputs","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","ngOnInit","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","ngOnDestroy","unsubscribe","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","clientHeight","_getLayoutDirection","outputs","MatTabBody","elementRef","_portalHost","consts","_onTranslateTabStarted","directives","data","animation","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupMixinBase","_MatTabGroupMixinBase","_MatTabGroupBase","_changeDetectorRef","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_animationDuration","test","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","Promise","resolve","then","forEach","tab","_subscribeToTabLabels","tabs","toArray","i","_tabHeader","_alignInkBarToSelectedTab","merge","map","Math","min","max","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","tabHeader","focusIndex","idx","dynamicHeight","MatTabGroup","animationMode","color","_focusChanged","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","takeUntil","_stopInterval","_keyManager","updateActiveItemIndex","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","of","resize","realign","updatePagination","_items","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","keyCode","setFirstItemActive","preventDefault","setLastItemActive","_itemSelected","onKeydown","textContent","_currentTextContent","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","platform","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","direction","_scrollHeader","labelIndex","selectedLabel","viewLength","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","_inkBar","alignToElement","hide","timer","maxScrollDistance","distance","_MatTabHeaderBase","viewportRuler","ngZone","_disableRipple","MatTabHeader","_handlePaginatorClick","_handleKeydown","_onContentChanges","MatTabsModule","CodeTabsComponent_mat_tab_5_ng_template_1_Template","tab_r111","class","CodeTabsComponent_mat_tab_5_Template","CodeTabsComponent","codeExamples","Array","from","querySelectorAll","tabContent","push","getTabInfo","codeComponents","codeComponent","code","getAttribute","innerHTML","path","region","header","undefined","language","linenums","CodeTabsModule","customElementComponent"],"mappings":"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","file":"code-code-tabs-module.js","sourcesContent":["import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [1, \"mat-card-content\"];\nconst _c1 = [1, \"mat-card-title\"];\nconst _c2 = [1, \"mat-card-subtitle\"];\nconst _c3 = [1, \"mat-card-actions\"];\nconst _c4 = [1, \"mat-card-footer\"];\nconst _c5 = [1, \"mat-card-image\"];\nconst _c6 = [1, \"mat-card-sm-image\"];\nconst _c7 = [1, \"mat-card-md-image\"];\nconst _c8 = [1, \"mat-card-lg-image\"];\nconst _c9 = [1, \"mat-card-xl-image\"];\nconst _c10 = [1, \"mat-card-avatar\"];\nconst _c11 = [1, \"mat-card\"];\nconst _c12 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c13 = [\"*\", \"mat-card-footer\"];\nconst _c14 = [1, \"mat-card-header\"];\nconst _c15 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c16 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c17 = [1, \"mat-card-title-group\"];\nconst _c18 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c19 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"]], hostBindings: function MatCardContent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null);\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostBindings: function MatCardTitle_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c1);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null);\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostBindings: function MatCardSubtitle_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null);\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostBindings: function MatCardActions_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(1);\n        ɵngcc0.ɵɵelementHostAttrs(_c3);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { constructor: [], align: [{\n            type: Input\n        }] });\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostBindings: function MatCardFooter_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c4);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null);\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostBindings: function MatCardImage_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c5);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null);\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostBindings: function MatCardSmImage_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c6);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null);\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostBindings: function MatCardMdImage_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null);\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostBindings: function MatCardLgImage_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c8);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null);\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostBindings: function MatCardXlImage_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c9);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null);\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostBindings: function MatCardAvatar_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c10);\n    } } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null);\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostBindings: function MatCard_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(1);\n        ɵngcc0.ɵɵelementHostAttrs(_c11);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c13, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c12);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media(-ms-high-contrast: active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}/*# sourceMappingURL=card.css.map */\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media(-ms-high-contrast: active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}/*# sourceMappingURL=card.css.map */\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _animationMode: [] });\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostBindings: function MatCardHeader_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c14);\n    } }, ngContentSelectors: _c16, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c15);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null);\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostBindings: function MatCardTitleGroup_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c17);\n    } }, ngContentSelectors: _c19, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c18);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n\n//# sourceMappingURL=card.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, HOME, END, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/cdk/portal';\nimport * as ɵngcc5 from '@angular/cdk/observers';\n\nconst _c0 = [1, \"mat-ink-bar\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c1 = [\"*\"];\nconst _c2 = [1, \"mat-tab-body\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c3 = function (a0) { return { animationDuration: a0 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c5 = [\"tabBodyWrapper\"];\nconst _c6 = [\"tabHeader\"];\nconst _c7 = [1, \"mat-tab-group\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r22.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r22 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r22.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const tab_r22 = ctx.$implicit; const i_r23 = ctx.index; const ctx_r29 = ɵngcc0.ɵɵnextContext(); const _r18 = ɵngcc0.ɵɵreference(1); return ctx_r29._handleClick(tab_r22, _r18, i_r23); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r19.selectedIndex == i_r23);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r19._getTabLabelId(i_r23))(\"disabled\", tab_r22.disabled)(\"matRippleDisabled\", tab_r22.disabled || ctx_r19.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r19._getTabIndex(tab_r22, i_r23))(\"aria-posinset\", i_r23 + 1)(\"aria-setsize\", ctx_r19._tabs.length)(\"aria-controls\", ctx_r19._getTabContentId(i_r23))(\"aria-selected\", ctx_r19.selectedIndex == i_r23)(\"aria-label\", tab_r22.ariaLabel || null)(\"aria-labelledby\", !tab_r22.ariaLabel && tab_r22.ariaLabelledby ? tab_r22.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r22.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r22.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33._removeTabBodyWrapperHeight(); });\n    ɵngcc0.ɵɵlistener(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r31 = ctx.$implicit;\n    const i_r32 = ctx.index;\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r21.selectedIndex == i_r32);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r21._getTabContentId(i_r32))(\"content\", tab_r31.content)(\"position\", tab_r31.position)(\"origin\", tab_r31.origin)(\"animationDuration\", ctx_r21.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r21._getTabLabelId(i_r32));\n} }\nconst _c8 = [\"tabListContainer\"];\nconst _c9 = [\"tabList\"];\nconst _c10 = [\"nextPaginator\"];\nconst _c11 = [\"previousPaginator\"];\nconst _c12 = [1, \"mat-tab-header\"];\nconst _c13 = [1, \"mat-tab-nav-bar\", \"mat-tab-header\"];\nconst _c14 = [\"mat-tab-nav-bar\", \"\"];\nconst _c15 = [1, \"mat-tab-link\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostBindings: function MatInkBar_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(1);\n        ɵngcc0.ɵɵelementHostAttrs(_c0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ElementRef }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _elementRef: [], _ngZone: [], _inkBarPositioner: [], _animationMode: [], alignToElement: [], show: [], hide: [], _setStyles: [] });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nMatTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { constructor: [], template: [] });\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) { return ɵMatTabLabel_BaseFactory(t || MatTabLabel); };\nMatTabLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel);\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef)); };\nMatTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatTabContent, true, TemplateRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c1, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel, { static: false },] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ViewContainerRef }]; }, { constructor: [], _viewContainerRef: [], textLabel: [{\n            type: Input,\n            args: ['label']\n        }], _contentPortal: [], _stateChanges: [], position: [], origin: [], isActive: [], content: [], ngOnChanges: [], ngOnDestroy: [], ngOnInit: [], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel, { static: false }]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] });\nif (false) {\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @type {?}\n     */\n    MatTab.prototype.templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host) {\n        super(componentFactoryResolver, viewContainerRef);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody)))); };\nMatTabBodyPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ComponentFactoryResolver }, { type: ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }]; }, { constructor: [], _host: [], _centeringSub: [], _leavingSub: [], ngOnInit: [], ngOnDestroy: [] });\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @return {?}\n     */\n    _computePositionFromOrigin() {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, selectors: [[\"do-not-use-abstract-mat-tab-body-base\"]], inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-body-base'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _elementRef: [], _dir: [], _dirChangeSubscription: [], _translateTabComplete: [], _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _positionIndex: [], ngOnInit: [], _position: [], ngOnDestroy: [], _onTranslateTabStarted: [], _getLayoutDirection: [], _isCenterPosition: [], _computePositionAnimationState: [], _computePositionFromOrigin: [], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] });\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nMatTabBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostBindings: function MatTabBody_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵelementHostAttrs(_c2);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); });\n        ɵngcc0.ɵɵlistener(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c4, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c3, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}/*# sourceMappingURL=tab-body.css.map */\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] }, changeDetection: 0 });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective, { static: false },] }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}/*# sourceMappingURL=tab-body.css.map */\\n\"]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ChangeDetectorRef }]; }, { constructor: [], _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective, { static: false }]\n        }] });\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._subscribeToTabLabels();\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, selectors: [[\"do-not-use-abstract-mat-tab-group-base\"]], inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-group-base'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _changeDetectorRef: [], _animationMode: [], _indexToSelect: [], _tabBodyWrapperHeight: [], _tabsSubscription: [], _tabLabelSubscription: [], _dynamicHeight: [], _selectedIndex: [], headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], _groupId: [], animationDuration: [{\n            type: Input\n        }], animationDuration: [], dynamicHeight: [{\n            type: Input\n        }], dynamicHeight: [], selectedIndex: [{\n            type: Input\n        }], selectedIndex: [], _animationDuration: [], backgroundColor: [{\n            type: Input\n        }], backgroundColor: [], _backgroundColor: [], ngAfterContentChecked: [], ngAfterContentInit: [], ngOnDestroy: [], realignInkBar: [], _focusChanged: [], _createChangeEvent: [], _subscribeToTabLabels: [], _clampTabIndex: [], _getTabLabelId: [], _getTabContentId: [], _setTabBodyWrapperHeight: [], _removeTabBodyWrapperHeight: [], _handleClick: [], _getTabIndex: [] });\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c5, true);\n        ɵngcc0.ɵɵviewQuery(_c6, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostBindings: function MatTabGroup_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[3, \"selectedIndex\", \"disableRipple\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); });\n        ɵngcc0.ɵɵlistener(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 13, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 7, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc1.NgForOf, MatTabLabelWrapper, ɵngcc2.MatRipple, ɵngcc3.CdkMonitorFocus, ɵngcc1.NgIf, ɵngcc4.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}/*# sourceMappingURL=tab-group.css.map */\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _tabs: [{ type: ContentChildren, args: [MatTab,] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper', { static: false },] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader', { static: false },] }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content\\\"\\n               [position]=\\\"tab.position\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color', 'disableRipple'],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}/*# sourceMappingURL=tab-group.css.map */\\n\"]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _tabs: [{\n            type: ContentChildren,\n            args: [MatTab]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper', { static: false }]\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader', { static: false }]\n        }] });\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._tabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTabLabelWrapper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ElementRef }]; }, { constructor: [], elementRef: [], focus: [], getOffsetLeft: [], getOffsetWidth: [] });\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            realign();\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                this._itemSelected(event);\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        /** @type {?} */\n        const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @return {?}\n     */\n    _handlePaginatorPress(direction) {\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, selectors: [[\"do-not-use-abstract-mat-paginated-tab-header\"]] });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-paginated-tab-header'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: ViewportRuler }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgZone }, { type: Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _elementRef: [], _changeDetectorRef: [], _viewportRuler: [], _dir: [], _ngZone: [], _platform: [], _animationMode: [], _scrollDistance: [], _selectedIndexChanged: [], _destroyed: [], _showPaginationControls: [], _disableScrollAfter: [], _disableScrollBefore: [], _stopScrolling: [], _selectedIndex: [], selectFocusedIndex: [], indexFocused: [], selectedIndex: [], selectedIndex: [], ngAfterViewInit: [], ngAfterContentInit: [], _keyManager: [], ngAfterContentChecked: [], _tabLabelCount: [], _scrollDistanceChanged: [], ngOnDestroy: [], _handleKeydown: [], _onContentChanges: [], _currentTextContent: [], updatePagination: [], focusIndex: [], focusIndex: [], _isValidIndex: [], _setTabFocus: [], _getLayoutDirection: [], _updateTabScrollPosition: [], scrollDistance: [], scrollDistance: [], _scrollHeader: [], _handlePaginatorClick: [], _scrollToLabel: [], _checkPaginationEnabled: [], _checkScrollingControls: [], _getMaxScrollDistance: [], _alignInkBarToSelectedTab: [], _stopInterval: [], _handlePaginatorPress: [], _scrollTo: [], _itemSelected: [] });\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, selectors: [[\"do-not-use-abstract-mat-tab-header-base\"]], inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-header-base'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: ViewportRuler }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgZone }, { type: Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _disableRipple: [], disableRipple: [{\n            type: Input\n        }], disableRipple: [], _itemSelected: [] });\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c8, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c9, true);\n        ɵngcc0.ɵɵviewQuery(_c10, true);\n        ɵngcc0.ɵɵviewQuery(_c11, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostBindings: function MatTabHeader_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(2);\n        ɵngcc0.ɵɵelementHostAttrs(_c12);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 13, vars: 5, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener($event) { return ctx._handlePaginatorClick(\"before\"); });\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\"); });\n        ɵngcc0.ɵɵlistener(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener($event) { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\"); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_10_listener($event) { return ctx._handlePaginatorClick(\"after\"); });\n        ɵngcc0.ɵɵlistener(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc5.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{min-width:72px}}/*# sourceMappingURL=tab-header.css.map */\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper,] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after')\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-labels{display:flex}[mat-align-tabs=center] .mat-tab-labels{justify-content:center}[mat-align-tabs=end] .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-label{opacity:1}}@media(max-width: 599px){.mat-tab-label{min-width:72px}}/*# sourceMappingURL=tab-header.css.map */\\n\"]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ChangeDetectorRef }, { type: ViewportRuler }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgZone }, { type: Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator', { static: false }]\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator', { static: false }]\n        }] });\nif (false) {\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, selectors: [[\"do-not-use-abstract-mat-tab-nav-base\"]], inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-nav-base'\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgZone }, { type: ChangeDetectorRef }, { type: ViewportRuler }, { type: Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _disableRipple: [], color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], backgroundColor: [], _backgroundColor: [], disableRipple: [{\n            type: Input\n        }], disableRipple: [], _itemSelected: [], ngAfterContentInit: [], updateActiveLink: [], selectedIndex: [] });\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ViewportRuler), ɵngcc0.ɵɵdirectiveInject(Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(MatInkBar, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c8, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c9, true);\n        ɵngcc0.ɵɵviewQuery(_c10, true);\n        ɵngcc0.ɵɵviewQuery(_c11, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostBindings: function MatTabNav_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(5);\n        ɵngcc0.ɵɵelementHostAttrs(_c13);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n        ɵngcc0.ɵɵclassProp(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\");\n        ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx.color === \"accent\");\n        ɵngcc0.ɵɵclassProp(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c14, ngContentSelectors: _c1, decls: 13, vars: 4, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener($event) { return ctx._handlePaginatorClick(\"before\"); });\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\"); });\n        ɵngcc0.ɵɵlistener(\"touchend\", function MatTabNav_Template_div_touchend_0_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener($event) { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\"); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_10_listener($event) { return ctx._handlePaginatorClick(\"after\"); });\n        ɵngcc0.ɵɵlistener(\"touchend\", function MatTabNav_Template_div_touchend_10_listener($event) { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(10);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc5.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}/*# sourceMappingURL=tab-nav-bar.css.map */\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator', { static: false },] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator', { static: false },] }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                moduleId: module.id,\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after')\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center] .mat-tab-links{justify-content:center}[mat-align-tabs=end] .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media(-ms-high-contrast: active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media(-ms-high-contrast: active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media(-ms-high-contrast: active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media(-ms-high-contrast: active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}/*# sourceMappingURL=tab-nav-bar.css.map */\\n\"]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: NgZone }, { type: ChangeDetectorRef }, { type: ViewportRuler }, { type: Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator', { static: false }]\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator', { static: false }]\n        }] });\nif (false) {\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, selectors: [[\"do-not-use-abstract-mat-tab-link-base\"]], inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive,\n        args: [{\n                // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n                selector: 'do-not-use-abstract-mat-tab-link-base'\n            }]\n    }], function () { return [{ type: _MatTabNavBase }, { type: ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _tabNavBar: [], elementRef: [], _focusMonitor: [], _isActive: [], rippleConfig: [], tabIndex: [], active: [{\n            type: Input\n        }], active: [], rippleDisabled: [], focus: [], ngOnDestroy: [] });\nif (false) {\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostBindings: function MatTabLink_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵallocHostVars(5);\n        ɵngcc0.ɵɵelementHostAttrs(_c15);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ElementRef }, { type: NgZone }, { type: Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { constructor: [], _tabLinkRipple: [], ngOnDestroy: [] });\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ],\n        MatCommonModule] });\n/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent,\n        MatPaginatedTabHeader,\n        _MatTabGroupBase,\n        _MatTabNavBase,\n        _MatTabBodyBase,\n        _MatTabHeaderBase,\n        _MatTabLinkBase]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabLink,\n        MatTabContent]; } });\n/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                    ( /** @type {?} */(\n                    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n                    MatPaginatedTabHeader)),\n                    ( /** @type {?} */(_MatTabGroupBase)),\n                    ( /** @type {?} */(_MatTabNavBase)),\n                    ( /** @type {?} */(_MatTabBodyBase)),\n                    ( /** @type {?} */(_MatTabHeaderBase)),\n                    ( /** @type {?} */(_MatTabLinkBase)),\n                ]\n            }]\n    }], null, null);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b, MatTabsModule, MatTabChangeEvent, MAT_TABS_CONFIG, _MatTabGroupBase, MatTabGroup, MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, _MatTabBodyBase, MatTabBodyPortal, MatTabHeader, _MatTabHeaderBase, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase, MatTabContent, matTabsAnimations };\n\n//# sourceMappingURL=tabs.js.map","/* tslint:disable component-selector */\nimport { Component, Input, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./code.component\";\nconst _c0 = [\"content\"];\nfunction CodeTabsComponent_mat_tab_5_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r111 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassMap(tab_r111.class);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tab_r111.header);\n} }\nfunction CodeTabsComponent_mat_tab_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-tab\", 4);\n    i0.ɵɵtemplate(1, CodeTabsComponent_mat_tab_5_ng_template_1_Template, 2, 4, \"ng-template\", 5);\n    i0.ɵɵelement(2, \"aio-code\", 6);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r111 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(tab_r111.class);\n    i0.ɵɵproperty(\"language\", tab_r111.language)(\"linenums\", tab_r111.linenums)(\"path\", tab_r111.path)(\"region\", tab_r111.region)(\"header\", tab_r111.header);\n} }\nconst _c1 = [\"*\"];\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\nexport class CodeTabsComponent {\n    ngOnInit() {\n        this.tabs = [];\n        const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n        for (const tabContent of codeExamples) {\n            this.tabs.push(this.getTabInfo(tabContent));\n        }\n    }\n    ngAfterViewInit() {\n        this.codeComponents.toArray().forEach((codeComponent, i) => {\n            codeComponent.code = this.tabs[i].code;\n        });\n    }\n    /** Gets the extracted TabInfo data from the provided code-pane element. */\n    getTabInfo(tabContent) {\n        return {\n            class: tabContent.getAttribute('class') || '',\n            code: tabContent.innerHTML,\n            path: tabContent.getAttribute('path') || '',\n            region: tabContent.getAttribute('region') || '',\n            header: tabContent.getAttribute('header') || undefined,\n            language: tabContent.getAttribute('language') || undefined,\n            linenums: tabContent.getAttribute('linenums') || this.linenums,\n        };\n    }\n}\nCodeTabsComponent.ɵfac = function CodeTabsComponent_Factory(t) { return new (t || CodeTabsComponent)(); };\nCodeTabsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: CodeTabsComponent, selectors: [[\"code-tabs\"]], viewQuery: function CodeTabsComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n        i0.ɵɵviewQuery(CodeComponent, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.content = _t.first);\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.codeComponents = _t);\n    } }, inputs: { linenums: \"linenums\" }, ngContentSelectors: _c1, decls: 6, vars: 2, consts: [[2, \"display\", \"none\"], [\"content\", \"\"], [1, \"code-tab-group\", 3, \"disableRipple\"], [\"style\", \"overflow-y: hidden;\", 4, \"ngFor\", \"ngForOf\"], [2, \"overflow-y\", \"hidden\"], [\"mat-tab-label\", \"\"], [3, \"language\", \"linenums\", \"path\", \"region\", \"header\"]], template: function CodeTabsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card\");\n        i0.ɵɵelementStart(4, \"mat-tab-group\", 2);\n        i0.ɵɵtemplate(5, CodeTabsComponent_mat_tab_5_Template, 3, 8, \"mat-tab\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disableRipple\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    } }, directives: [i1.MatCard, i2.MatTabGroup, i3.NgForOf, i2.MatTab, i2.MatTabLabel, i4.CodeComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(CodeTabsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'code-tabs',\n                template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" [disableRipple]=\"true\">\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n            }]\n    }], null, { linenums: [{\n            type: Input\n        }], content: [{\n            type: ViewChild,\n            args: ['content', { static: true }]\n        }], codeComponents: [{\n            type: ViewChildren,\n            args: [CodeComponent]\n        }] });\n","/* tslint:disable component-selector */\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string;\n  code: string;\n  path: string;\n  region: string;\n\n  header?: string;\n  language?: string;\n  linenums?: string;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" [disableRipple]=\"true\">\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.header }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [header]=\"tab.header\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input() linenums: string | undefined;\n\n  @ViewChild('content', { static: true }) content: ElementRef<HTMLDivElement>;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = Array.from(this.content.nativeElement.querySelectorAll('code-pane'));\n\n    for (const tabContent of codeExamples) {\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: Element): TabInfo {\n    return {\n      class: tabContent.getAttribute('class') || '',\n      code: tabContent.innerHTML,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n\n      header: tabContent.getAttribute('header') || undefined,\n      language: tabContent.getAttribute('language') || undefined,\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { CodeModule } from './code.module';\nimport * as i0 from \"@angular/core\";\nexport class CodeTabsModule {\n    constructor() {\n        this.customElementComponent = CodeTabsComponent;\n    }\n}\nCodeTabsModule.ɵmod = i0.ɵɵdefineNgModule({ type: CodeTabsModule });\nCodeTabsModule.ɵinj = i0.ɵɵdefineInjector({ factory: function CodeTabsModule_Factory(t) { return new (t || CodeTabsModule)(); }, imports: [[CommonModule, MatCardModule, MatTabsModule, CodeModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(CodeTabsModule, { declarations: [CodeTabsComponent], imports: [CommonModule, MatCardModule, MatTabsModule, CodeModule], exports: [CodeTabsComponent] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(CodeTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCardModule, MatTabsModule, CodeModule],\n                declarations: [CodeTabsComponent],\n                exports: [CodeTabsComponent],\n                entryComponents: [CodeTabsComponent]\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}