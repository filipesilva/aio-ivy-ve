{"version":3,"sources":["./src/app/frontend/logs/component.ts.pre-build-optimizer.js","./src/app/frontend/logs/template.html","./src/app/frontend/logs/component.ts","./src/app/frontend/logs/routing.ts","./src/app/frontend/logs/routing.ts.pre-build-optimizer.js","./src/app/frontend/logs/module.ts","./src/app/frontend/logs/module.ts.pre-build-optimizer.js"],"names":["_c0","I18N_1","I18N_3","$localize","_c7","I18N_8","I18N_10","I18N_12","I18N_14","I18N_16","I18N_18","_c22","LogsComponent_mat_optgroup_7_mat_option_2_Template","rf","ctx","item_r1428","$implicit","LogsComponent_mat_optgroup_7_Template","ctx_r1420","_c25","LogsComponent_mat_optgroup_8_mat_option_2_Template","item_r1430","LogsComponent_mat_optgroup_8_Template","ctx_r1421","LogsComponent_mat_option_13_Template","item_r1431","_c26","a0","a1","LogsComponent_div_27_Template","item_r1432","ctx_r1424","I18N_27","LogsComponent_span_29_Template","ctx_r1425","_c29","logsPerView","maxLogSize","beginningOfLogFile","endOfLogFile","oldestTimestamp","newestTimestamp","i18n","MSG_LOGS_ZEROSTATE_TEXT","MSG_LOGS_TRUNCATED_WARNING","LOGS_ROUTE","path","component","LogsComponent","logService","activatedRoute_","settingsService_","dialog_","notifications_","_router","totalItems","itemsPerPage","refreshInterval","this","getLogsAutoRefreshTimeInterval","isLoading","namespace","snapshot","params","resourceNamespace","containerName","queryParams","container","sourceSubscription","getResource","resourceName","resourceType","subscribe","data","logSources","pod","podNames","containerNames","appendContainerParam","logsSubscription","updateUiModel","navigate","queryParamsHandling","intervalSubscription","unsubscribe","podLogs","currentSelection","selection","logsSet","formatAllLogs","logs","info","truncated","push","error","getFollowing","setTimeout","scrollToBottom","length","timestamp","content","map","line","formatLine","getShowTimestamp","loadNewest","loadView","logFilePosition","referencePoint","lineNum","offsetFrom","bind","offsetTo","scrollToTop","referenceTimestamp","referenceLinenum","onLoad","set","getPrevious","setInverted","setCompact","setShowTimestamp","setPrevious","setAutoRefresh","toggleIntervalFunction","toggleFollowing","closed","intervalObservable","Observable","interval","dialogData","paramMap","get","open","setFollowing","isScrolledBottom","nativeElement","logViewContainer_","scrollHeight","scrollTop","clientHeight","scrollTo","position","top","left","behavior","ɵfac","t","ɵcmp","_t","first","decls","vars","consts","template","onContainerChange","downloadLog","onLogsScroll","loadOldest","loadOlder","loadNewer","onTextColorChange","onFontSizeChange","onShowTimestamp","toggleLogAutoRefresh","toggleLogFollow","onPreviousChange","_r1426","directives","pipes","styles","breadcrumb","parent","LogsRoutingModule","ɵmod","ɵinj","factory","LogsModule"],"mappings":"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","file":"logs-module.js","sourcesContent":["// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { HttpParams } from '@angular/common/http';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GlobalSettingsService } from 'common/services/global/globalsettings';\nimport { LogService } from 'common/services/global/logs';\nimport { NotificationSeverity, NotificationsService } from 'common/services/global/notifications';\nimport { Observable } from 'rxjs';\nimport { LogsDownloadDialog } from '../common/dialogs/download/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"common/services/global/logs\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"common/services/global/globalsettings\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"common/services/global/notifications\";\nimport * as i6 from \"../common/components/card/component\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/tooltip\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/menu\";\nimport * as i16 from \"@angular/flex-layout/extended\";\nimport * as i17 from \"../common/components/list/spinner/component\";\nimport * as i18 from \"@angular/material/core\";\nimport * as i19 from \"../common/components/date/component\";\nimport * as i20 from \"../common/pipes/safehtml\";\nconst _c0 = [\"logViewContainer\"];\nvar I18N_1;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_1021548113296205274$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_2 = goog.getMsg(\"Logs from\");\n    I18N_1 = MSG_EXTERNAL_1021548113296205274$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_2;\n}\nelse {\n    I18N_1 = $localize `Logs from`;\n}\nvar I18N_3;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7136018875175606726$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_4 = goog.getMsg(\"in\");\n    I18N_3 = MSG_EXTERNAL_7136018875175606726$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_4;\n}\nelse {\n    I18N_3 = $localize `in`;\n}\nvar I18N_5;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8601511221316154701$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_6 = goog.getMsg(\"Download logs\");\n    I18N_5 = MSG_EXTERNAL_8601511221316154701$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_6;\n}\nelse {\n    I18N_5 = $localize `Download logs`;\n}\nconst _c7 = [\"matTooltip\", I18N_5];\nvar I18N_8;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_5519023941949331063$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_9 = goog.getMsg(\"Invert colors\");\n    I18N_8 = MSG_EXTERNAL_5519023941949331063$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_9;\n}\nelse {\n    I18N_8 = $localize `Invert colors`;\n}\nvar I18N_10;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8926664967847390286$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_11 = goog.getMsg(\"Reduce font size\");\n    I18N_10 = MSG_EXTERNAL_8926664967847390286$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_11;\n}\nelse {\n    I18N_10 = $localize `Reduce font size`;\n}\nvar I18N_12;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_6046016632304545069$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_13 = goog.getMsg(\"Show timestamps\");\n    I18N_12 = MSG_EXTERNAL_6046016632304545069$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_13;\n}\nelse {\n    I18N_12 = $localize `Show timestamps`;\n}\nvar I18N_14;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_4349483104848363318$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_15 = goog.getMsg(\"Auto-refresh (every {$interpolation} s.)\", { \"interpolation\": \"\\uFFFD0\\uFFFD\" });\n    I18N_14 = MSG_EXTERNAL_4349483104848363318$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_15;\n}\nelse {\n    I18N_14 = $localize `Auto-refresh (every ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: s.)`;\n}\nvar I18N_16;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_2821920677270664220$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_17 = goog.getMsg(\"Follow logs\");\n    I18N_16 = MSG_EXTERNAL_2821920677270664220$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_17;\n}\nelse {\n    I18N_16 = $localize `Follow logs`;\n}\nvar I18N_18;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8918818541808624034$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_19 = goog.getMsg(\"Show previous logs\");\n    I18N_18 = MSG_EXTERNAL_8918818541808624034$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS_19;\n}\nelse {\n    I18N_18 = $localize `Show previous logs`;\n}\nvar I18N_20;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_6869304038391725752$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__21 = goog.getMsg(\"Containers\");\n    I18N_20 = MSG_EXTERNAL_6869304038391725752$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__21;\n}\nelse {\n    I18N_20 = $localize `Containers`;\n}\nconst _c22 = [\"label\", I18N_20];\nfunction LogsComponent_mat_optgroup_7_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r1428 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1428);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1428, \" \");\n} }\nfunction LogsComponent_mat_optgroup_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 25);\n    i0.ɵɵi18nAttributes(1, _c22);\n    i0.ɵɵtemplate(2, LogsComponent_mat_optgroup_7_mat_option_2_Template, 2, 2, \"mat-option\", 8);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1420 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1420.logSources == null ? null : ctx_r1420.logSources.containerNames);\n} }\nvar I18N_23;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7281870845577621674$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__24 = goog.getMsg(\"Init Containers\");\n    I18N_23 = MSG_EXTERNAL_7281870845577621674$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__24;\n}\nelse {\n    I18N_23 = $localize `Init Containers`;\n}\nconst _c25 = [\"label\", I18N_23];\nfunction LogsComponent_mat_optgroup_8_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r1430 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1430);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1430, \" \");\n} }\nfunction LogsComponent_mat_optgroup_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 25);\n    i0.ɵɵi18nAttributes(1, _c25);\n    i0.ɵɵtemplate(2, LogsComponent_mat_optgroup_8_mat_option_2_Template, 2, 2, \"mat-option\", 8);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1421 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1421.logSources == null ? null : ctx_r1421.logSources.initContainerNames);\n} }\nfunction LogsComponent_mat_option_13_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r1431 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1431);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1431, \" \");\n} }\nconst _c26 = function (a0, a1) { return { \"kd-logs-element-compact\": a0, \"kd-logs-element\": a1 }; };\nfunction LogsComponent_div_27_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelement(1, \"span\", 28);\n    i0.ɵɵpipe(2, \"kdSafeHtml\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r1432 = ctx.$implicit;\n    const ctx_r1424 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c26, ctx_r1424.logService.getCompact(), !ctx_r1424.logService.getCompact()));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 2, item_r1432), i0.ɵɵsanitizeHtml);\n} }\nvar I18N_27;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_4328174262532318174$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__28 = goog.getMsg(\" Logs from {$startTagKdDate}{$closeTagKdDate} to {$startTagKdDate_1}{$closeTagKdDate} UTC \", { \"startTagKdDate\": \"\\uFFFD#2\\uFFFD\", \"closeTagKdDate\": \"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\", \"startTagKdDate_1\": \"\\uFFFD#3\\uFFFD\" });\n    I18N_27 = MSG_EXTERNAL_4328174262532318174$$___SRC_APP_FRONTEND_LOGS_COMPONENT_TS__28;\n}\nelse {\n    I18N_27 = $localize ` Logs from ${\"\\uFFFD#2\\uFFFD\"}:START_TAG_KD_DATE:${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_TAG_KD_DATE: to ${\"\\uFFFD#3\\uFFFD\"}:START_TAG_KD_DATE_1:${\"[\\uFFFD/#2\\uFFFD|\\uFFFD/#3\\uFFFD]\"}:CLOSE_TAG_KD_DATE: UTC `;\n}\nI18N_27 = i0.ɵɵi18nPostprocess(I18N_27);\nfunction LogsComponent_span_29_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵi18nStart(1, I18N_27);\n    i0.ɵɵelement(2, \"kd-date\", 30);\n    i0.ɵɵelement(3, \"kd-date\", 30);\n    i0.ɵɵi18nEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1425 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"date\", ctx_r1425.podLogs == null ? null : ctx_r1425.podLogs.info.fromDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"date\", ctx_r1425.podLogs == null ? null : ctx_r1425.podLogs.info.toDate);\n} }\nconst _c29 = function (a0, a1) { return { \"kd-logs-text-color-invert\": a0, \"kd-logs-text-color\": a1 }; };\nconst logsPerView = 100;\nconst maxLogSize = 2e9;\n// Load logs from the beginning of the log file. This matters only if the log file is too large to\n// be loaded completely.\nconst beginningOfLogFile = 'beginning';\n// Load logs from the end of the log file. This matters only if the log file is too large to be\n// loaded completely.\nconst endOfLogFile = 'end';\nconst oldestTimestamp = 'oldest';\nconst newestTimestamp = 'newest';\nconst i18n = {\n    MSG_LOGS_ZEROSTATE_TEXT: 'The selected container has not logged any messages yet.',\n    MSG_LOGS_TRUNCATED_WARNING: 'The middle part of the log file cannot be loaded, because it is too big.',\n};\nexport class LogsComponent {\n    constructor(logService, activatedRoute_, settingsService_, dialog_, notifications_, _router) {\n        this.activatedRoute_ = activatedRoute_;\n        this.settingsService_ = settingsService_;\n        this.dialog_ = dialog_;\n        this.notifications_ = notifications_;\n        this._router = _router;\n        this.totalItems = 0;\n        this.itemsPerPage = 10;\n        this.refreshInterval = 5000;\n        this.logService = logService;\n        this.refreshInterval = this.settingsService_.getLogsAutoRefreshTimeInterval() * 1000;\n        this.isLoading = true;\n        const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n        const resourceType = this.activatedRoute_.snapshot.params.resourceType;\n        const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n        const containerName = this.activatedRoute_.snapshot.queryParams.container;\n        this.sourceSubscription = logService\n            .getResource(`source/${namespace}/${resourceName}/${resourceType}`)\n            .subscribe((data) => {\n            this.logSources = data;\n            this.pod = data.podNames[0]; // Pick first pod (cannot use resource name as it may\n            // not be a pod).\n            this.container = containerName ? containerName : data.containerNames[0]; // Pick from URL or first.\n            this.appendContainerParam();\n            this.logsSubscription = this.logService\n                .getResource(`${namespace}/${this.pod}/${this.container}`)\n                .subscribe((data) => {\n                this.updateUiModel(data);\n                this.isLoading = false;\n            });\n        });\n    }\n    ngOnDestroy() {\n        this._router.navigate([], {\n            queryParams: { ['container']: null },\n            queryParamsHandling: 'merge',\n        });\n        if (this.intervalSubscription) {\n            this.intervalSubscription.unsubscribe();\n        }\n        if (this.sourceSubscription) {\n            this.sourceSubscription.unsubscribe();\n        }\n        if (this.logsSubscription) {\n            this.logsSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Updates all state parameters and sets the current log view with the data returned from the\n     * backend If logs are not available sets logs to no logs available message.\n     */\n    updateUiModel(podLogs) {\n        this.podLogs = podLogs;\n        this.currentSelection = podLogs.selection;\n        this.logsSet = this.formatAllLogs(podLogs.logs);\n        if (podLogs.info.truncated) {\n            this.notifications_.push(i18n.MSG_LOGS_TRUNCATED_WARNING, NotificationSeverity.error);\n        }\n        if (this.logService.getFollowing()) {\n            // Pauses very slightly for the view to refresh.\n            setTimeout(() => {\n                this.scrollToBottom();\n            });\n        }\n    }\n    formatAllLogs(logs) {\n        if (logs.length === 0) {\n            logs = [{ timestamp: '0', content: i18n.MSG_LOGS_ZEROSTATE_TEXT }];\n        }\n        return logs.map(line => this.formatLine(line));\n    }\n    formatLine(line) {\n        // add timestamp if needed\n        const showTimestamp = this.logService.getShowTimestamp();\n        return showTimestamp ? `${line.timestamp}  ${line.content}` : line.content;\n    }\n    appendContainerParam() {\n        this._router.navigate([], {\n            queryParams: { ['container']: this.container },\n            queryParamsHandling: 'merge',\n        });\n    }\n    onContainerChange() {\n        this.appendContainerParam();\n        this.loadNewest();\n    }\n    /**\n     * Loads maxLogSize oldest lines of logs.\n     */\n    loadOldest() {\n        this.loadView(beginningOfLogFile, oldestTimestamp, 0, -maxLogSize - logsPerView, -maxLogSize);\n    }\n    /**\n     * Loads maxLogSize newest lines of logs.\n     */\n    loadNewest() {\n        this.loadView(endOfLogFile, newestTimestamp, 0, maxLogSize, maxLogSize + logsPerView);\n    }\n    /**\n     * Shifts view by maxLogSize lines to the past.\n     */\n    loadOlder() {\n        this.loadView(this.currentSelection.logFilePosition, this.currentSelection.referencePoint.timestamp, this.currentSelection.referencePoint.lineNum, this.currentSelection.offsetFrom - logsPerView, this.currentSelection.offsetFrom, this.scrollToBottom.bind(this));\n    }\n    /**\n     * Shifts view by maxLogSize lines to the future.\n     */\n    loadNewer() {\n        this.loadView(this.currentSelection.logFilePosition, this.currentSelection.referencePoint.timestamp, this.currentSelection.referencePoint.lineNum, this.currentSelection.offsetTo, this.currentSelection.offsetTo + logsPerView, this.scrollToTop.bind(this));\n    }\n    /**\n     * Downloads and loads slice of logs as specified by offsetFrom and offsetTo.\n     * It works just like normal slicing, but indices are referenced relatively to certain reference\n     * line.\n     * So for example if reference line has index n and we want to download first 10 elements in array\n     * we have to use\n     * from -n to -n+10.\n     */\n    loadView(logFilePosition, referenceTimestamp, referenceLinenum, offsetFrom, offsetTo, onLoad) {\n        const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n        const params = new HttpParams()\n            .set('logFilePosition', logFilePosition)\n            .set('referenceTimestamp', referenceTimestamp)\n            .set('referenceLineNum', `${referenceLinenum}`)\n            .set('offsetFrom', `${offsetFrom}`)\n            .set('offsetTo', `${offsetTo}`)\n            .set('previous', `${this.logService.getPrevious()}`);\n        this.logsSubscription = this.logService\n            .getResource(`${namespace}/${this.pod}/${this.container}`, params)\n            .subscribe((podLogs) => {\n            this.updateUiModel(podLogs);\n            if (onLoad) {\n                onLoad();\n            }\n        });\n    }\n    onTextColorChange() {\n        this.logService.setInverted();\n    }\n    onFontSizeChange() {\n        this.logService.setCompact();\n    }\n    onShowTimestamp() {\n        this.logService.setShowTimestamp();\n        this.logsSet = this.formatAllLogs(this.podLogs.logs);\n    }\n    /**\n     * Execute when a user changes the selected option for show previous container logs.\n     * @export\n     */\n    onPreviousChange() {\n        this.logService.setPrevious();\n        this.loadNewest();\n    }\n    /**\n     * Toggles log auto-refresh mechanism.\n     */\n    toggleLogAutoRefresh() {\n        this.logService.setAutoRefresh();\n        this.toggleIntervalFunction();\n    }\n    /**\n     * Toggles log follow mechanism.\n     */\n    toggleLogFollow() {\n        this.logService.toggleFollowing();\n    }\n    /**\n     * Starts and stops interval function used to automatically refresh logs.\n     */\n    toggleIntervalFunction() {\n        if (this.intervalSubscription && !this.intervalSubscription.closed) {\n            this.intervalSubscription.unsubscribe();\n        }\n        else {\n            const intervalObservable = Observable.interval(this.refreshInterval);\n            this.intervalSubscription = intervalObservable.subscribe(() => this.loadNewest());\n        }\n    }\n    downloadLog() {\n        const dialogData = {\n            data: {\n                pod: this.pod,\n                container: this.container,\n                namespace: this.activatedRoute_.snapshot.paramMap.get('resourceNamespace'),\n            },\n        };\n        this.dialog_.open(LogsDownloadDialog, dialogData);\n    }\n    /**\n     * Listens for scroll events to set log following state.\n     */\n    onLogsScroll() {\n        this.logService.setFollowing(this.isScrolledBottom());\n    }\n    /**\n     * Checks if the current logs scroll position is at the bottom.\n     */\n    isScrolledBottom() {\n        const { nativeElement } = this.logViewContainer_;\n        return nativeElement.scrollHeight <= nativeElement.scrollTop + nativeElement.clientHeight;\n    }\n    /**\n     * Scrolls log view to the bottom of the page.\n     */\n    scrollToBottom() {\n        this.scrollTo('BOTTOM');\n    }\n    /**\n     * Scrolls log view to the top of the page.\n     */\n    scrollToTop() {\n        this.scrollTo('TOP');\n    }\n    scrollTo(position) {\n        const { nativeElement } = this.logViewContainer_;\n        if (!nativeElement) {\n            return;\n        }\n        let top;\n        switch (position) {\n            case 'TOP':\n                top = 0;\n                break;\n            case 'BOTTOM':\n                top = nativeElement.scrollHeight;\n                break;\n            default:\n                return;\n        }\n        nativeElement.scrollTo({ top, left: 0, behavior: 'smooth' });\n    }\n}\n/** @nocollapse */ LogsComponent.ɵfac = function LogsComponent_Factory(t) { return new (t || LogsComponent)(i0.ɵɵdirectiveInject(i1.LogService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.GlobalSettingsService), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.NotificationsService), i0.ɵɵdirectiveInject(i2.Router)); };\n/** @nocollapse */ LogsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LogsComponent, selectors: [[\"kd-logs\"]], viewQuery: function LogsComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.logViewContainer_ = _t.first);\n    } }, decls: 76, vars: 23, consts: [[1, \"kd-logs-container\"], [3, \"expandable\"], [\"title\", \"\", 3, \"fxLayout\", \"fxFlex\"], [1, \"kd-logs-header-text\"], [1, \"kd-logs-toolbar-select\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"label\", \"Containers\", 4, \"ngIf\"], [\"label\", \"Init Containers\", 4, \"ngIf\"], [1, \"kd-form-field\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"kd-logs-style-buttons\"], [\"mat-icon-button\", \"\", 3, \"click\", 6, \"matTooltip\"], [\"mat-icon-button\", \"\", 3, \"matMenuTriggerFor\"], [\"content\", \"\", 1, \"kd-log-view\", 3, \"ngClass\"], [\"kdLoadingSpinner\", \"\", 3, \"isLoading\"], [1, \"kd-log-view-container\", 3, \"scroll\"], [\"logViewContainer\", \"\"], [1, \"kd-virtual-repeat-sizer\"], [\"class\", \"kd-logs-element\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"row\", 1, \"kd-muted\"], [\"class\", \"kd-logs-info\", 4, \"ngIf\"], [\"fxFlex\", \"\"], [1, \"kd-list-pagination-buttons\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"kdMenu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"], [6, \"label\"], [3, \"value\"], [1, \"kd-logs-element\", 3, \"ngClass\"], [1, \"kd-log-line\", 3, \"innerHTML\"], [1, \"kd-logs-info\"], [\"format\", \"short\", 3, \"date\"]], template: function LogsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"kd-card\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵi18n(4, I18N_1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelementStart(6, \"mat-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LogsComponent_Template_mat_select_ngModelChange_6_listener($event) { return ctx.container = $event; })(\"selectionChange\", function LogsComponent_Template_mat_select_selectionChange_6_listener($event) { return ctx.onContainerChange(); });\n        i0.ɵɵtemplate(7, LogsComponent_mat_optgroup_7_Template, 3, 1, \"mat-optgroup\", 5);\n        i0.ɵɵtemplate(8, LogsComponent_mat_optgroup_8_Template, 3, 1, \"mat-optgroup\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\", 3);\n        i0.ɵɵi18n(10, I18N_3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(12, \"mat-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LogsComponent_Template_mat_select_ngModelChange_12_listener($event) { return ctx.pod = $event; })(\"selectionChange\", function LogsComponent_Template_mat_select_selectionChange_12_listener($event) { return ctx.loadNewest(); });\n        i0.ɵɵtemplate(13, LogsComponent_mat_option_13_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵi18nAttributes(16, _c7);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_15_listener($event) { return ctx.downloadLog(); });\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"file_download\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵelementStart(20, \"mat-icon\");\n        i0.ɵɵtext(21, \"more_vert\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 12);\n        i0.ɵɵelement(23, \"div\", 13);\n        i0.ɵɵelementStart(24, \"div\", 14, 15);\n        i0.ɵɵlistener(\"scroll\", function LogsComponent_Template_div_scroll_24_listener($event) { return ctx.onLogsScroll(); });\n        i0.ɵɵelement(26, \"div\", 16);\n        i0.ɵɵtemplate(27, LogsComponent_div_27_Template, 3, 7, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 18);\n        i0.ɵɵtemplate(29, LogsComponent_span_29_Template, 4, 2, \"span\", 19);\n        i0.ɵɵelement(30, \"span\", 20);\n        i0.ɵɵelementStart(31, \"div\", 21);\n        i0.ɵɵelementStart(32, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_32_listener($event) { return ctx.loadOldest(); });\n        i0.ɵɵelementStart(33, \"mat-icon\");\n        i0.ɵɵtext(34, \"first_page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_35_listener($event) { return ctx.loadOlder(); });\n        i0.ɵɵelementStart(36, \"mat-icon\");\n        i0.ɵɵtext(37, \"chevron_left\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_38_listener($event) { return ctx.loadNewer(); });\n        i0.ɵɵelementStart(39, \"mat-icon\");\n        i0.ɵɵtext(40, \"chevron_right\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_41_listener($event) { return ctx.loadNewest(); });\n        i0.ɵɵelementStart(42, \"mat-icon\");\n        i0.ɵɵtext(43, \"last_page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"mat-menu\", null, 23);\n        i0.ɵɵelementStart(46, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_46_listener($event) { return ctx.onTextColorChange(); });\n        i0.ɵɵelementStart(47, \"mat-icon\");\n        i0.ɵɵtext(48);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"span\");\n        i0.ɵɵi18n(50, I18N_8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_51_listener($event) { return ctx.onFontSizeChange(); });\n        i0.ɵɵelementStart(52, \"mat-icon\");\n        i0.ɵɵtext(53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"span\");\n        i0.ɵɵi18n(55, I18N_10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_56_listener($event) { return ctx.onShowTimestamp(); });\n        i0.ɵɵelementStart(57, \"mat-icon\");\n        i0.ɵɵtext(58);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"span\");\n        i0.ɵɵi18n(60, I18N_12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_61_listener($event) { return ctx.toggleLogAutoRefresh(); });\n        i0.ɵɵelementStart(62, \"mat-icon\");\n        i0.ɵɵtext(63);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"span\");\n        i0.ɵɵi18n(65, I18N_14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_66_listener($event) { return ctx.toggleLogFollow(); });\n        i0.ɵɵelementStart(67, \"mat-icon\");\n        i0.ɵɵtext(68);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"span\");\n        i0.ɵɵi18n(70, I18N_16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function LogsComponent_Template_button_click_71_listener($event) { return ctx.onPreviousChange(); });\n        i0.ɵɵelementStart(72, \"mat-icon\");\n        i0.ɵɵtext(73);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"span\");\n        i0.ɵɵi18n(75, I18N_18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r1426 = i0.ɵɵreference(45);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"expandable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"fxLayout\", \"row\")(\"fxFlex\", 100);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.container);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logSources == null ? null : ctx.logSources.containerNames == null ? null : ctx.logSources.containerNames.length) > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logSources == null ? null : ctx.logSources.initContainerNames == null ? null : ctx.logSources.initContainerNames.length) > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logSources == null ? null : ctx.logSources.podNames);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matMenuTriggerFor\", _r1426);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c29, ctx.logService == null ? null : ctx.logService.getInverted(), !(ctx.logService == null ? null : ctx.logService.getInverted())));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.logsSet);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.logsSet == null ? null : ctx.logsSet.length) > 1);\n        i0.ɵɵadvance(19);\n        i0.ɵɵtextInterpolate(ctx.logService == null ? null : ctx.logService.getInverted() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getCompact() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getShowTimestamp() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getAutoRefresh() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵi18nExp(ctx.refreshInterval / 1000);\n        i0.ɵɵi18nApply(65);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getFollowing() ? \"check_box\" : \"check_box_outline_blank\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.logService.getPrevious() ? \"check_box\" : \"check_box_outline_blank\");\n    } }, directives: [i6.CardComponent, i7.DefaultLayoutDirective, i7.DefaultFlexDirective, i8.MatFormField, i9.MatSelect, i10.NgControlStatus, i10.NgModel, i11.NgIf, i11.NgForOf, i12.MatButton, i13.MatTooltip, i14.MatIcon, i15.MatMenuTrigger, i11.NgClass, i16.DefaultClassDirective, i17.LoadingSpinner, i15._MatMenu, i15.MatMenuItem, i18.MatOptgroup, i18.MatOption, i19.DateComponent], pipes: [i20.SafeHtmlFormatter], styles: [\".kd-logs-header-text[_ngcontent-%COMP%]{line-height:42px;white-space:nowrap}.kd-logs-container[_ngcontent-%COMP%]{box-sizing:border-box;height:100%;padding-bottom:35px}.kd-logs-color-icon[_ngcontent-%COMP%], .kd-logs-text-color-invert[_ngcontent-%COMP%]{background-color:#000;color:#fff}.kd-logs-text-color-invert[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:rgba(255,255,255,.5)}.kd-logs-text-color[_ngcontent-%COMP%]{background-color:#fff;color:#000}.kd-logs-size-icon[_ngcontent-%COMP%]{color:#000}.kd-logs-size-icon-compact[_ngcontent-%COMP%]{color:#000;transform:scale(-1,1)}.kd-log-view[_ngcontent-%COMP%]{-webkit-font-smoothing:antialiased;display:flex;flex:1;font-family:\\\"Roboto Mono Regular\\\",monospace;padding:0;width:100%}.kd-log-line[_ngcontent-%COMP%]{white-space:pre-wrap}.kd-logs-element[_ngcontent-%COMP%], .kd-logs-element-compact[_ngcontent-%COMP%]{padding:0 16px;word-wrap:break-word}.kd-logs-element[_ngcontent-%COMP%]{font-size:14px}.kd-logs-element-compact[_ngcontent-%COMP%]{font-size:12px}.kd-logs-toolbar-select[_ngcontent-%COMP%]{display:inline-flex;flex-grow:1;margin:0;position:relative}.kd-logs-style-buttons[_ngcontent-%COMP%]{float:right;white-space:nowrap}.kd-cross-line-black[_ngcontent-%COMP%]{stroke:#000;stroke-width:2}.kd-cross-line-white[_ngcontent-%COMP%]{stroke:#fff;stroke-width:4}.kd-logs-info[_ngcontent-%COMP%]{padding:12px}.kd-cross-style[_ngcontent-%COMP%]{bottom:0;left:0;position:absolute;right:0;top:0}.kd-list-pagination-buttons[_ngcontent-%COMP%]{margin-right:8px}.mat-form-field[_ngcontent-%COMP%]{align-items:center;display:inline-flex;margin-bottom:-25px;margin-top:-16px;padding:0 5px;vertical-align:middle;width:auto}.mat-form-field.kd-form-field[_ngcontent-%COMP%]{flex:1}.kd-log-view-container[_ngcontent-%COMP%]{-webkit-overflow-scrolling:touch;background-color:inherit;bottom:50px;box-sizing:border-box;left:0;margin:0;overflow-x:hidden;padding:0;position:absolute;right:0;top:57px}.kd-virtual-repeat-sizer[_ngcontent-%COMP%]{box-sizing:border-box;display:block;height:1px;margin:0;padding:0;width:1px}.kd-muted[_ngcontent-%COMP%]{bottom:0;box-sizing:border-box;color:#000;left:0;position:absolute;width:100%}[_nghost-%COMP%]     mat-card{height:100%}[_nghost-%COMP%]     .mat-form-field-infix{width:inherit}[_nghost-%COMP%]     .mat-select-value{max-width:100%;width:inherit}\"] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LogsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-logs',\n                templateUrl: './template.html',\n                styleUrls: ['./style.scss'],\n            }]\n    }], function () { return [{ type: i1.LogService }, { type: i2.ActivatedRoute }, { type: i3.GlobalSettingsService }, { type: i4.MatDialog }, { type: i5.NotificationsService }, { type: i2.Router }]; }, { logViewContainer_: [{\n            type: ViewChild,\n            args: ['logViewContainer', { static: true }]\n        }] });\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<div class=\"kd-logs-container\">\n  <kd-card [expandable]=\"false\">\n    <div title\n         [fxLayout]=\"'row'\"\n         [fxFlex]=\"100\">\n      <span class=\"kd-logs-header-text\"\n            i18n>Logs from</span>\n      <mat-form-field>\n        <mat-select [(ngModel)]=\"container\"\n                    class=\"kd-logs-toolbar-select\"\n                    (selectionChange)=\"onContainerChange()\">\n          <mat-optgroup label=\"Containers\"\n                        i18n-label\n                        *ngIf=\"logSources?.containerNames?.length > 0\">\n            <mat-option *ngFor=\"let item of logSources?.containerNames\"\n                        [value]=\"item\">\n              {{item}}\n            </mat-option>\n          </mat-optgroup>\n          <mat-optgroup label=\"Init Containers\"\n                        i18n-label\n                        *ngIf=\"logSources?.initContainerNames?.length > 0\">\n            <mat-option *ngFor=\"let item of logSources?.initContainerNames\"\n                        [value]=\"item\">\n              {{item}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-select>\n      </mat-form-field>\n      <span class=\"kd-logs-header-text\"\n            i18n>in</span>\n      <mat-form-field class=\"kd-form-field\">\n        <mat-select [(ngModel)]=\"pod\"\n                    class=\"kd-logs-toolbar-select\"\n                    (selectionChange)=\"loadNewest()\">\n          <mat-option *ngFor=\"let item of logSources?.podNames\"\n                      [value]=\"item\">\n            {{item}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div class=\"kd-logs-style-buttons\">\n        <button mat-icon-button\n                i18n-matTooltip\n                matTooltip=\"Download logs\"\n                (click)=\"downloadLog()\">\n          <mat-icon>file_download</mat-icon>\n        </button>\n        <button mat-icon-button\n                [matMenuTriggerFor]=\"kdMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    </div>\n\n    <div content\n         class=\"kd-log-view\"\n         [ngClass]=\"{'kd-logs-text-color-invert': logService?.getInverted(), 'kd-logs-text-color': !logService?.getInverted()}\">\n      <div kdLoadingSpinner\n           [isLoading]=\"isLoading\"></div>\n      <div class=\"kd-log-view-container\"\n           #logViewContainer\n           (scroll)=\"onLogsScroll()\">\n        <div class=\"kd-virtual-repeat-sizer\"></div>\n        <div *ngFor=\"let item of logsSet\"\n             class=\"kd-logs-element\"\n             [ngClass]=\"{'kd-logs-element-compact': logService.getCompact(), 'kd-logs-element': !logService.getCompact()}\">\n          <span class=\"kd-log-line\"\n                [innerHTML]=\"item | kdSafeHtml\"></span>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\"\n           class=\"kd-muted\">\n        <span class=\"kd-logs-info\"\n              *ngIf=\"logsSet?.length > 1\"\n              i18n>\n          Logs from <kd-date [date]=\"podLogs?.info.fromDate\"\n                   format=\"short\"></kd-date> to <kd-date [date]=\"podLogs?.info.toDate\"\n                   format=\"short\"></kd-date> UTC\n        </span>\n        <span fxFlex></span>\n        <div class=\"kd-list-pagination-buttons\">\n          <button mat-icon-button\n                  (click)=\"loadOldest()\">\n            <mat-icon>first_page</mat-icon>\n          </button>\n          <button mat-icon-button\n                  (click)=\"loadOlder()\">\n            <mat-icon>chevron_left</mat-icon>\n          </button>\n          <button mat-icon-button\n                  (click)=\"loadNewer()\">\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n          <button mat-icon-button\n                  (click)=\"loadNewest()\">\n            <mat-icon>last_page</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </kd-card>\n</div>\n\n<mat-menu #kdMenu=\"matMenu\">\n  <button mat-menu-item\n          (click)=\"onTextColorChange()\">\n    <mat-icon>{{logService?.getInverted() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Invert colors</span>\n  </button>\n  <button mat-menu-item\n          (click)=\"onFontSizeChange()\">\n    <mat-icon>{{logService.getCompact() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Reduce font size</span>\n  </button>\n  <button mat-menu-item\n          (click)=\"onShowTimestamp()\">\n    <mat-icon>{{logService.getShowTimestamp() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Show timestamps</span>\n  </button>\n  <button mat-menu-item\n          (click)=\"toggleLogAutoRefresh()\">\n    <mat-icon>{{logService.getAutoRefresh() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Auto-refresh (every {{refreshInterval / 1000}} s.)</span>\n  </button>\n  <button mat-menu-item\n          (click)=\"toggleLogFollow()\">\n    <mat-icon>{{logService.getFollowing() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Follow logs</span>\n  </button>\n  <button mat-menu-item\n          (click)=\"onPreviousChange()\">\n    <mat-icon>{{logService.getPrevious() ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>\n    <span i18n>Show previous logs</span>\n  </button>\n</mat-menu>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {HttpParams} from '@angular/common/http';\nimport {Component, ElementRef, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LogDetails, LogLine, LogSelection, LogSources} from '@api/backendapi';\nimport {GlobalSettingsService} from 'common/services/global/globalsettings';\nimport {LogService} from 'common/services/global/logs';\nimport {NotificationSeverity, NotificationsService} from 'common/services/global/notifications';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {LogsDownloadDialog} from '../common/dialogs/download/dialog';\nimport {NAMESPACE_STATE_PARAM} from '../common/params/params';\nimport {CONFIG} from '../index.config';\n\nconst logsPerView = 100;\nconst maxLogSize = 2e9;\n// Load logs from the beginning of the log file. This matters only if the log file is too large to\n// be loaded completely.\nconst beginningOfLogFile = 'beginning';\n// Load logs from the end of the log file. This matters only if the log file is too large to be\n// loaded completely.\nconst endOfLogFile = 'end';\nconst oldestTimestamp = 'oldest';\nconst newestTimestamp = 'newest';\n\nconst i18n = {\n  MSG_LOGS_ZEROSTATE_TEXT: 'The selected container has not logged any messages yet.',\n  MSG_LOGS_TRUNCATED_WARNING:\n    'The middle part of the log file cannot be loaded, because it is too big.',\n};\n\ntype ScrollPosition = 'TOP' | 'BOTTOM';\n\n@Component({\n  selector: 'kd-logs',\n  templateUrl: './template.html',\n  styleUrls: ['./style.scss'],\n})\nexport class LogsComponent implements OnDestroy {\n  @ViewChild('logViewContainer', {static: true}) logViewContainer_: ElementRef;\n  podLogs: LogDetails;\n  logsSet: string[];\n  logSources: LogSources;\n  pod: string;\n  container: string;\n  logService: LogService;\n  totalItems = 0;\n  itemsPerPage = 10;\n  currentSelection: LogSelection;\n  refreshInterval = 5000;\n  intervalSubscription: Subscription;\n  sourceSubscription: Subscription;\n  logsSubscription: Subscription;\n  isLoading: boolean;\n\n  constructor(\n    logService: LogService,\n    private readonly activatedRoute_: ActivatedRoute,\n    private readonly settingsService_: GlobalSettingsService,\n    private readonly dialog_: MatDialog,\n    private readonly notifications_: NotificationsService,\n    private readonly _router: Router,\n  ) {\n    this.logService = logService;\n    this.refreshInterval = this.settingsService_.getLogsAutoRefreshTimeInterval() * 1000;\n    this.isLoading = true;\n\n    const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n    const resourceType = this.activatedRoute_.snapshot.params.resourceType;\n    const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n    const containerName = this.activatedRoute_.snapshot.queryParams.container;\n\n    this.sourceSubscription = logService\n      .getResource(`source/${namespace}/${resourceName}/${resourceType}`)\n      .subscribe((data: LogSources) => {\n        this.logSources = data;\n        this.pod = data.podNames[0]; // Pick first pod (cannot use resource name as it may\n        // not be a pod).\n        this.container = containerName ? containerName : data.containerNames[0]; // Pick from URL or first.\n        this.appendContainerParam();\n\n        this.logsSubscription = this.logService\n          .getResource(`${namespace}/${this.pod}/${this.container}`)\n          .subscribe((data: LogDetails) => {\n            this.updateUiModel(data);\n            this.isLoading = false;\n          });\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._router.navigate([], {\n      queryParams: {['container']: null},\n      queryParamsHandling: 'merge',\n    });\n\n    if (this.intervalSubscription) {\n      this.intervalSubscription.unsubscribe();\n    }\n    if (this.sourceSubscription) {\n      this.sourceSubscription.unsubscribe();\n    }\n    if (this.logsSubscription) {\n      this.logsSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates all state parameters and sets the current log view with the data returned from the\n   * backend If logs are not available sets logs to no logs available message.\n   */\n  updateUiModel(podLogs: LogDetails): void {\n    this.podLogs = podLogs;\n    this.currentSelection = podLogs.selection;\n    this.logsSet = this.formatAllLogs(podLogs.logs);\n    if (podLogs.info.truncated) {\n      this.notifications_.push(i18n.MSG_LOGS_TRUNCATED_WARNING, NotificationSeverity.error);\n    }\n\n    if (this.logService.getFollowing()) {\n      // Pauses very slightly for the view to refresh.\n      setTimeout(() => {\n        this.scrollToBottom();\n      });\n    }\n  }\n\n  formatAllLogs(logs: LogLine[]): string[] {\n    if (logs.length === 0) {\n      logs = [{timestamp: '0', content: i18n.MSG_LOGS_ZEROSTATE_TEXT}];\n    }\n    return logs.map(line => this.formatLine(line));\n  }\n\n  formatLine(line: LogLine): string {\n    // add timestamp if needed\n    const showTimestamp = this.logService.getShowTimestamp();\n    return showTimestamp ? `${line.timestamp}  ${line.content}` : line.content;\n  }\n\n  appendContainerParam() {\n    this._router.navigate([], {\n      queryParams: {['container']: this.container},\n      queryParamsHandling: 'merge',\n    });\n  }\n\n  onContainerChange() {\n    this.appendContainerParam();\n    this.loadNewest();\n  }\n\n  /**\n   * Loads maxLogSize oldest lines of logs.\n   */\n  loadOldest(): void {\n    this.loadView(beginningOfLogFile, oldestTimestamp, 0, -maxLogSize - logsPerView, -maxLogSize);\n  }\n\n  /**\n   * Loads maxLogSize newest lines of logs.\n   */\n  loadNewest(): void {\n    this.loadView(endOfLogFile, newestTimestamp, 0, maxLogSize, maxLogSize + logsPerView);\n  }\n\n  /**\n   * Shifts view by maxLogSize lines to the past.\n   */\n  loadOlder(): void {\n    this.loadView(\n      this.currentSelection.logFilePosition,\n      this.currentSelection.referencePoint.timestamp,\n      this.currentSelection.referencePoint.lineNum,\n      this.currentSelection.offsetFrom - logsPerView,\n      this.currentSelection.offsetFrom,\n      this.scrollToBottom.bind(this),\n    );\n  }\n\n  /**\n   * Shifts view by maxLogSize lines to the future.\n   */\n  loadNewer(): void {\n    this.loadView(\n      this.currentSelection.logFilePosition,\n      this.currentSelection.referencePoint.timestamp,\n      this.currentSelection.referencePoint.lineNum,\n      this.currentSelection.offsetTo,\n      this.currentSelection.offsetTo + logsPerView,\n      this.scrollToTop.bind(this),\n    );\n  }\n\n  /**\n   * Downloads and loads slice of logs as specified by offsetFrom and offsetTo.\n   * It works just like normal slicing, but indices are referenced relatively to certain reference\n   * line.\n   * So for example if reference line has index n and we want to download first 10 elements in array\n   * we have to use\n   * from -n to -n+10.\n   */\n  loadView(\n    logFilePosition: string,\n    referenceTimestamp: string,\n    referenceLinenum: number,\n    offsetFrom: number,\n    offsetTo: number,\n    onLoad?: Function,\n  ): void {\n    const namespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n    const params = new HttpParams()\n      .set('logFilePosition', logFilePosition)\n      .set('referenceTimestamp', referenceTimestamp)\n      .set('referenceLineNum', `${referenceLinenum}`)\n      .set('offsetFrom', `${offsetFrom}`)\n      .set('offsetTo', `${offsetTo}`)\n      .set('previous', `${this.logService.getPrevious()}`);\n    this.logsSubscription = this.logService\n      .getResource(`${namespace}/${this.pod}/${this.container}`, params)\n      .subscribe((podLogs: LogDetails) => {\n        this.updateUiModel(podLogs);\n        if (onLoad) {\n          onLoad();\n        }\n      });\n  }\n\n  onTextColorChange(): void {\n    this.logService.setInverted();\n  }\n\n  onFontSizeChange(): void {\n    this.logService.setCompact();\n  }\n\n  onShowTimestamp(): void {\n    this.logService.setShowTimestamp();\n    this.logsSet = this.formatAllLogs(this.podLogs.logs);\n  }\n\n  /**\n   * Execute when a user changes the selected option for show previous container logs.\n   * @export\n   */\n  onPreviousChange(): void {\n    this.logService.setPrevious();\n    this.loadNewest();\n  }\n\n  /**\n   * Toggles log auto-refresh mechanism.\n   */\n  toggleLogAutoRefresh(): void {\n    this.logService.setAutoRefresh();\n    this.toggleIntervalFunction();\n  }\n\n  /**\n   * Toggles log follow mechanism.\n   */\n  toggleLogFollow(): void {\n    this.logService.toggleFollowing();\n  }\n\n  /**\n   * Starts and stops interval function used to automatically refresh logs.\n   */\n  toggleIntervalFunction(): void {\n    if (this.intervalSubscription && !this.intervalSubscription.closed) {\n      this.intervalSubscription.unsubscribe();\n    } else {\n      const intervalObservable = Observable.interval(this.refreshInterval);\n      this.intervalSubscription = intervalObservable.subscribe(() => this.loadNewest());\n    }\n  }\n\n  downloadLog(): void {\n    const dialogData = {\n      data: {\n        pod: this.pod,\n        container: this.container,\n        namespace: this.activatedRoute_.snapshot.paramMap.get('resourceNamespace'),\n      },\n    };\n    this.dialog_.open(LogsDownloadDialog, dialogData);\n  }\n\n  /**\n   * Listens for scroll events to set log following state.\n   */\n  onLogsScroll(): void {\n    this.logService.setFollowing(this.isScrolledBottom());\n  }\n\n  /**\n   * Checks if the current logs scroll position is at the bottom.\n   */\n  isScrolledBottom(): boolean {\n    const {nativeElement} = this.logViewContainer_;\n    return nativeElement.scrollHeight <= nativeElement.scrollTop + nativeElement.clientHeight;\n  }\n\n  /**\n   * Scrolls log view to the bottom of the page.\n   */\n  scrollToBottom(): void {\n    this.scrollTo('BOTTOM');\n  }\n\n  /**\n   * Scrolls log view to the top of the page.\n   */\n  scrollToTop(): void {\n    this.scrollTo('TOP');\n  }\n\n  scrollTo(position: ScrollPosition): void {\n    const {nativeElement} = this.logViewContainer_;\n    if (!nativeElement) {\n      return;\n    }\n\n    let top;\n    switch (position) {\n      case 'TOP':\n        top = 0;\n        break;\n      case 'BOTTOM':\n        top = nativeElement.scrollHeight;\n        break;\n      default:\n        return;\n    }\n\n    nativeElement.scrollTo({top, left: 0, behavior: 'smooth'});\n  }\n}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\nimport {Route, RouterModule} from '@angular/router';\n\nimport {LOGS_PARENT_PLACEHOLDER} from '../common/components/breadcrumbs/component';\n\nimport {LogsComponent} from './component';\n\nexport const LOGS_ROUTE: Route = {\n  path: ':resourceNamespace/:resourceName/:resourceType',\n  component: LogsComponent,\n  data: {\n    breadcrumb: 'Logs',\n    parent: LOGS_PARENT_PLACEHOLDER,\n  },\n};\n\n@NgModule({\n  imports: [RouterModule.forChild([LOGS_ROUTE])],\n  exports: [RouterModule],\n})\nexport class LogsRoutingModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LOGS_PARENT_PLACEHOLDER } from '../common/components/breadcrumbs/component';\nimport { LogsComponent } from './component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const LOGS_ROUTE = {\n    path: ':resourceNamespace/:resourceName/:resourceType',\n    component: LogsComponent,\n    data: {\n        breadcrumb: 'Logs',\n        parent: LOGS_PARENT_PLACEHOLDER,\n    },\n};\nexport class LogsRoutingModule {\n}\n/** @nocollapse */ LogsRoutingModule.ɵmod = i0.ɵɵdefineNgModule({ type: LogsRoutingModule });\n/** @nocollapse */ LogsRoutingModule.ɵinj = i0.ɵɵdefineInjector({ factory: function LogsRoutingModule_Factory(t) { return new (t || LogsRoutingModule)(); }, imports: [[RouterModule.forChild([LOGS_ROUTE])],\n        RouterModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(LogsRoutingModule, { imports: [i1.RouterModule], exports: [RouterModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LogsRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [RouterModule.forChild([LOGS_ROUTE])],\n                exports: [RouterModule],\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ComponentsModule} from '../common/components/module';\nimport {SharedModule} from '../shared.module';\n\nimport {LogsComponent} from './component';\nimport {LogsRoutingModule} from './routing';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ComponentsModule, LogsRoutingModule],\n  declarations: [LogsComponent],\n})\nexport class LogsModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ComponentsModule } from '../common/components/module';\nimport { SharedModule } from '../shared.module';\nimport { LogsComponent } from './component';\nimport { LogsRoutingModule } from './routing';\nimport * as i0 from \"@angular/core\";\nexport class LogsModule {\n}\n/** @nocollapse */ LogsModule.ɵmod = i0.ɵɵdefineNgModule({ type: LogsModule });\n/** @nocollapse */ LogsModule.ɵinj = i0.ɵɵdefineInjector({ factory: function LogsModule_Factory(t) { return new (t || LogsModule)(); }, imports: [[CommonModule, SharedModule, ComponentsModule, LogsRoutingModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(LogsModule, { declarations: [LogsComponent], imports: [CommonModule, SharedModule, ComponentsModule, LogsRoutingModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LogsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, SharedModule, ComponentsModule, LogsRoutingModule],\n                declarations: [LogsComponent],\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}