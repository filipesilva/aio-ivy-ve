{"version":3,"sources":["./src/app/frontend/settings/global/saveanywaysdialog/dialog.ts.pre-build-optimizer.js","./src/app/frontend/settings/global/saveanywaysdialog/dialog.ts","./src/app/frontend/settings/global/saveanywaysdialog/template.html","./src/app/frontend/settings/entry/component.ts.pre-build-optimizer.js","./src/app/frontend/settings/entry/component.ts","./src/app/frontend/settings/entry/template.html","./src/app/frontend/settings/global/component.ts.pre-build-optimizer.js","./src/app/frontend/settings/global/template.html","./src/app/frontend/settings/global/component.ts","./src/app/frontend/settings/local/component.ts.pre-build-optimizer.js","./src/app/frontend/settings/local/component.ts","./src/app/frontend/settings/local/template.html","./src/app/frontend/settings/component.ts","./src/app/frontend/settings/component.ts.pre-build-optimizer.js","./src/app/frontend/settings/routing.ts","./src/app/frontend/settings/routing.ts.pre-build-optimizer.js","./src/app/frontend/settings/module.ts","./src/app/frontend/settings/module.ts.pre-build-optimizer.js"],"names":["I18N_0","I18N_2","I18N_4","I18N_6","$localize","SaveAnywayDialog","dialogRef","this","close","ɵfac","t","ɵcmp","rf","directives","encapsulation","_c0","SettingsEntryComponent","_c8","_c11","_c16","_c21","_c26","I18N_27","I18N_29","GlobalSettingsComponent_kd_card_0_Template","ctx","_r1334","_r1332","ctx_r1331","GlobalSettingsComponent","settings_","dialog_","title_","concurrentChangeErr_","settings","hasLoadError","load","isInitialized","form","resetForm","onLoad","bind","onLoadError","itemsPerPage","getItemsPerPage","clusterName","getClusterName","logsAutoRefreshTimeInterval","getLogsAutoRefreshTimeInterval","resourceAutoRefreshTimeInterval","getResourceAutoRefreshTimeInterval","save","subscribe","update","onSettingsUpdate","next","err","data","indexOf","open","width","afterClosed","result","LocalSettingsComponent","get","handleThemeChange","isThemeDark","onThemeChange","SettingsComponent","SETTINGS_ROUTE","path","component","breadcrumb","SettingsRoutingModule","ɵmod","ɵinj","factory","SettingsModule"],"mappings":"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","file":"settings-module.js","sourcesContent":["// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nvar I18N_0;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_2417328504220076358$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_1 = goog.getMsg(\"Settings have changed since last reload\");\n    I18N_0 = MSG_EXTERNAL_2417328504220076358$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_1;\n}\nelse {\n    I18N_0 = $localize `Settings have changed since last reload`;\n}\nvar I18N_2;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_4558539712487554281$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_3 = goog.getMsg(\"Do you want to save them anyways?\");\n    I18N_2 = MSG_EXTERNAL_4558539712487554281$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_3;\n}\nelse {\n    I18N_2 = $localize `Do you want to save them anyways?`;\n}\nvar I18N_4;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_3768927257183755959$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_5 = goog.getMsg(\"Save\");\n    I18N_4 = MSG_EXTERNAL_3768927257183755959$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_5;\n}\nelse {\n    I18N_4 = $localize `Save`;\n}\nvar I18N_6;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_1102717806459547726$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_7 = goog.getMsg(\"Refresh\");\n    I18N_6 = MSG_EXTERNAL_1102717806459547726$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_SAVEANYWAYSDIALOG_DIALOG_TS_7;\n}\nelse {\n    I18N_6 = $localize `Refresh`;\n}\nexport class SaveAnywayDialog {\n    constructor(dialogRef) {\n        this.dialogRef = dialogRef;\n    }\n    onNoClick() {\n        this.dialogRef.close();\n    }\n}\n/** @nocollapse */ SaveAnywayDialog.ɵfac = function SaveAnywayDialog_Factory(t) { return new (t || SaveAnywayDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef)); };\n/** @nocollapse */ SaveAnywayDialog.ɵcmp = i0.ɵɵdefineComponent({ type: SaveAnywayDialog, selectors: [[\"kd-settings-save-anyway-dialog\"]], decls: 9, vars: 2, consts: [[\"mat-dialog-title\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"mat-dialog-close\"]], template: function SaveAnywayDialog_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵi18n(1, I18N_0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\");\n        i0.ɵɵi18n(3, I18N_2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-actions\");\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵi18n(6, I18N_4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 1);\n        i0.ɵɵi18n(8, I18N_6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", false);\n    } }, directives: [i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i2.MatButton, i1.MatDialogClose], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SaveAnywayDialog, [{\n        type: Component,\n        args: [{\n                selector: 'kd-settings-save-anyway-dialog',\n                templateUrl: 'template.html',\n            }]\n    }], function () { return [{ type: i1.MatDialogRef }]; }, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'kd-settings-save-anyway-dialog',\n  templateUrl: 'template.html',\n})\nexport class SaveAnywayDialog {\n  constructor(public dialogRef: MatDialogRef<SaveAnywayDialog>) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<h2 mat-dialog-title\n    i18n>Settings have changed since last reload</h2>\n<mat-dialog-content i18n>Do you want to save them anyways?</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button\n          color=\"primary\"\n          [mat-dialog-close]=\"true\"\n          i18n>Save</button>\n  <button mat-button\n          color=\"primary\"\n          [mat-dialog-close]=\"false\"\n          i18n>Refresh</button>\n</mat-dialog-actions>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component, Input } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nconst _c0 = [\"*\"];\nexport class SettingsEntryComponent {\n}\n/** @nocollapse */ SettingsEntryComponent.ɵfac = function SettingsEntryComponent_Factory(t) { return new (t || SettingsEntryComponent)(); };\n/** @nocollapse */ SettingsEntryComponent.ɵcmp = i0.ɵɵdefineComponent({ type: SettingsEntryComponent, selectors: [[\"kd-settings-entry\"]], inputs: { key: \"key\", desc: \"desc\" }, ngContentSelectors: _c0, decls: 6, vars: 2, consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center none\", \"fxFlex\", \"\"], [1, \"kd-muted\"]], template: function SettingsEntryComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(5, 0, [\"class\", \"kd-settings-entry-form\", \"fxFlex\", \"\"]);\n    } if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.key);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.desc);\n    } }, directives: [i1.DefaultLayoutDirective, i1.DefaultLayoutAlignDirective, i1.DefaultFlexDirective], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SettingsEntryComponent, [{\n        type: Component,\n        args: [{ selector: 'kd-settings-entry', templateUrl: './template.html' }]\n    }], null, { key: [{\n            type: Input\n        }], desc: [{\n            type: Input\n        }] });\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component, Input} from '@angular/core';\n\n@Component({selector: 'kd-settings-entry', templateUrl: './template.html'})\nexport class SettingsEntryComponent {\n  @Input() key: string;\n  @Input() desc: string;\n}\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<div fxLayout=\"column\"\n     fxLayoutAlign=\"center none\"\n     fxFlex>\n  <div>{{key}}</div>\n  <div class=\"kd-muted\">{{desc}}</div>\n</div>\n<ng-content class=\"kd-settings-entry-form\"\n            fxFlex>\n</ng-content>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalSettingsService } from '../../common/services/global/globalsettings';\nimport { TitleService } from '../../common/services/global/title';\nimport { SaveAnywayDialog } from './saveanywaysdialog/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../common/services/global/globalsettings\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../common/services/global/title\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../common/components/card/component\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../entry/component\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/slider\";\nimport * as i12 from \"@angular/material/button\";\nvar I18N_0;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8703572208950935791$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__1 = goog.getMsg(\"Global settings\");\n    I18N_0 = MSG_EXTERNAL_8703572208950935791$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__1;\n}\nelse {\n    I18N_0 = $localize `Global settings`;\n}\nvar I18N_2;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7011149990189086031$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__3 = goog.getMsg(\" Global settings are stored in config map, so all of them are applied for every instance of the app. \");\n    I18N_2 = MSG_EXTERNAL_7011149990189086031$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__3;\n}\nelse {\n    I18N_2 = $localize ` Global settings are stored in config map, so all of them are applied for every instance of the app. `;\n}\nvar I18N_4;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8108958927167803950$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__5 = goog.getMsg(\"Cluster name\");\n    I18N_4 = MSG_EXTERNAL_8108958927167803950$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__5;\n}\nelse {\n    I18N_4 = $localize `Cluster name`;\n}\nvar I18N_6;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_1695738375031661256$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__7 = goog.getMsg(\"Cluster name appears in the browser window title if it is set.\");\n    I18N_6 = MSG_EXTERNAL_1695738375031661256$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__7;\n}\nelse {\n    I18N_6 = $localize `Cluster name appears in the browser window title if it is set.`;\n}\nconst _c8 = [\"key\", I18N_4, \"desc\", I18N_6];\nvar I18N_9;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8108958927167803950$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__10 = goog.getMsg(\"Cluster name\");\n    I18N_9 = MSG_EXTERNAL_8108958927167803950$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__10;\n}\nelse {\n    I18N_9 = $localize `Cluster name`;\n}\nconst _c11 = [\"placeholder\", I18N_9];\nvar I18N_12;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_8939587804990976924$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__13 = goog.getMsg(\"Items per page\");\n    I18N_12 = MSG_EXTERNAL_8939587804990976924$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__13;\n}\nelse {\n    I18N_12 = $localize `Items per page`;\n}\nvar I18N_14;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7614757218837076331$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__15 = goog.getMsg(\"Max number of items that can be displayed on each list page.\");\n    I18N_14 = MSG_EXTERNAL_7614757218837076331$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__15;\n}\nelse {\n    I18N_14 = $localize `Max number of items that can be displayed on each list page.`;\n}\nconst _c16 = [\"key\", I18N_12, \"desc\", I18N_14];\nvar I18N_17;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7494553487547465000$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__18 = goog.getMsg(\"Logs auto-refresh time interval\");\n    I18N_17 = MSG_EXTERNAL_7494553487547465000$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__18;\n}\nelse {\n    I18N_17 = $localize `Logs auto-refresh time interval`;\n}\nvar I18N_19;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_90589545897682607$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__20 = goog.getMsg(\"Number of seconds between every auto-refresh of logs.\");\n    I18N_19 = MSG_EXTERNAL_90589545897682607$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__20;\n}\nelse {\n    I18N_19 = $localize `Number of seconds between every auto-refresh of logs.`;\n}\nconst _c21 = [\"key\", I18N_17, \"desc\", I18N_19];\nvar I18N_22;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_3298085247516944059$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__23 = goog.getMsg(\"Resource auto-refresh time interval\");\n    I18N_22 = MSG_EXTERNAL_3298085247516944059$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__23;\n}\nelse {\n    I18N_22 = $localize `Resource auto-refresh time interval`;\n}\nvar I18N_24;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_3139808086382723160$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__25 = goog.getMsg(\"Number of seconds between every auto-refresh of every resource. Set 0 to disable.\");\n    I18N_24 = MSG_EXTERNAL_3139808086382723160$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__25;\n}\nelse {\n    I18N_24 = $localize `Number of seconds between every auto-refresh of every resource. Set 0 to disable.`;\n}\nconst _c26 = [\"key\", I18N_22, \"desc\", I18N_24];\nvar I18N_27;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_4024825301968853407$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__28 = goog.getMsg(\" Save \");\n    I18N_27 = MSG_EXTERNAL_4024825301968853407$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__28;\n}\nelse {\n    I18N_27 = $localize ` Save `;\n}\nvar I18N_29;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_6679740865696700718$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__30 = goog.getMsg(\" Reload \");\n    I18N_29 = MSG_EXTERNAL_6679740865696700718$$___SRC_APP_FRONTEND_SETTINGS_GLOBAL_COMPONENT_TS__30;\n}\nelse {\n    I18N_29 = $localize ` Reload `;\n}\nfunction GlobalSettingsComponent_kd_card_0_Template(rf, ctx) { if (rf & 1) {\n    const _r1334 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"kd-card\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵi18n(2, I18N_0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵi18n(5, I18N_2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"form\", 4, 5);\n    i0.ɵɵlistener(\"ngSubmit\", function GlobalSettingsComponent_kd_card_0_Template_form_ngSubmit_7_listener($event) { i0.ɵɵrestoreView(_r1334); const _r1332 = i0.ɵɵreference(8); const ctx_r1333 = i0.ɵɵnextContext(); return ctx_r1333.save(_r1332); });\n    i0.ɵɵelementStart(9, \"kd-settings-entry\", 6);\n    i0.ɵɵi18nAttributes(10, _c8);\n    i0.ɵɵelementStart(11, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(12, \"input\", 8);\n    i0.ɵɵi18nAttributes(13, _c11);\n    i0.ɵɵlistener(\"ngModelChange\", function GlobalSettingsComponent_kd_card_0_Template_input_ngModelChange_12_listener($event) { i0.ɵɵrestoreView(_r1334); const ctx_r1335 = i0.ɵɵnextContext(); return ctx_r1335.settings.clusterName = $event; });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"kd-settings-entry\", 6);\n    i0.ɵɵi18nAttributes(15, _c16);\n    i0.ɵɵelementStart(16, \"div\", 7);\n    i0.ɵɵelementStart(17, \"mat-slider\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function GlobalSettingsComponent_kd_card_0_Template_mat_slider_ngModelChange_17_listener($event) { i0.ɵɵrestoreView(_r1334); const ctx_r1336 = i0.ɵɵnextContext(); return ctx_r1336.settings.itemsPerPage = $event; });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 10);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"kd-settings-entry\", 6);\n    i0.ɵɵi18nAttributes(21, _c21);\n    i0.ɵɵelementStart(22, \"div\", 7);\n    i0.ɵɵelementStart(23, \"mat-slider\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function GlobalSettingsComponent_kd_card_0_Template_mat_slider_ngModelChange_23_listener($event) { i0.ɵɵrestoreView(_r1334); const ctx_r1337 = i0.ɵɵnextContext(); return ctx_r1337.settings.logsAutoRefreshTimeInterval = $event; });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"span\", 10);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"kd-settings-entry\", 6);\n    i0.ɵɵi18nAttributes(27, _c26);\n    i0.ɵɵelementStart(28, \"div\", 7);\n    i0.ɵɵelementStart(29, \"mat-slider\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function GlobalSettingsComponent_kd_card_0_Template_mat_slider_ngModelChange_29_listener($event) { i0.ɵɵrestoreView(_r1334); const ctx_r1338 = i0.ɵɵnextContext(); return ctx_r1338.settings.resourceAutoRefreshTimeInterval = $event; });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"span\", 10);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"br\");\n    i0.ɵɵelement(33, \"br\");\n    i0.ɵɵelementStart(34, \"button\", 13);\n    i0.ɵɵi18n(35, I18N_27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function GlobalSettingsComponent_kd_card_0_Template_button_click_36_listener($event) { i0.ɵɵrestoreView(_r1334); const _r1332 = i0.ɵɵreference(8); const ctx_r1339 = i0.ɵɵnextContext(); return ctx_r1339.load(_r1332); });\n    i0.ɵɵi18n(37, I18N_29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r1332 = i0.ɵɵreference(8);\n    const ctx_r1331 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"initialized\", ctx_r1331.isInitialized())(\"expandable\", true);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1331.settings.clusterName);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1331.settings.itemsPerPage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1331.settings.itemsPerPage, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1331.settings.logsAutoRefreshTimeInterval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1331.settings.logsAutoRefreshTimeInterval, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1331.settings.resourceAutoRefreshTimeInterval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1331.settings.resourceAutoRefreshTimeInterval, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", _r1332.pristine);\n} }\nexport class GlobalSettingsComponent {\n    constructor(settings_, dialog_, title_) {\n        this.settings_ = settings_;\n        this.dialog_ = dialog_;\n        this.title_ = title_;\n        // Keep it in sync with ConcurrentSettingsChangeError constant from the backend.\n        this.concurrentChangeErr_ = 'settings changed since last reload';\n        this.settings = {};\n        this.hasLoadError = false;\n    }\n    ngOnInit() {\n        this.load();\n    }\n    isInitialized() {\n        return this.settings_.isInitialized();\n    }\n    load(form) {\n        if (form) {\n            form.resetForm();\n        }\n        this.settings_.load(this.onLoad.bind(this), this.onLoadError.bind(this));\n    }\n    onLoad() {\n        this.settings.itemsPerPage = this.settings_.getItemsPerPage();\n        this.settings.clusterName = this.settings_.getClusterName();\n        this.settings.logsAutoRefreshTimeInterval = this.settings_.getLogsAutoRefreshTimeInterval();\n        this.settings.resourceAutoRefreshTimeInterval = this.settings_.getResourceAutoRefreshTimeInterval();\n    }\n    onLoadError() {\n        this.hasLoadError = true;\n    }\n    save(form) {\n        this.settings_.save(this.settings).subscribe(() => {\n            this.load(form);\n            this.title_.update();\n            this.settings_.onSettingsUpdate.next();\n        }, err => {\n            if (err && err.data.indexOf(this.concurrentChangeErr_) !== -1) {\n                this.dialog_\n                    .open(SaveAnywayDialog, { width: '420px' })\n                    .afterClosed()\n                    .subscribe(result => {\n                    if (result === true) {\n                        // Backend was refreshed with the PUT request, so the second try will be\n                        // successful unless yet another concurrent change will happen. In that case\n                        // \"save anyways\" dialog will be shown again.\n                        this.save(form);\n                    }\n                    else {\n                        this.load(form);\n                    }\n                });\n            }\n        });\n    }\n}\n/** @nocollapse */ GlobalSettingsComponent.ɵfac = function GlobalSettingsComponent_Factory(t) { return new (t || GlobalSettingsComponent)(i0.ɵɵdirectiveInject(i1.GlobalSettingsService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.TitleService)); };\n/** @nocollapse */ GlobalSettingsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: GlobalSettingsComponent, selectors: [[\"kd-global-settings\"]], decls: 1, vars: 1, consts: [[3, \"initialized\", \"expandable\", 4, \"ngIf\"], [3, \"initialized\", \"expandable\"], [\"title\", \"\"], [\"content\", \"\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [6, \"key\", \"desc\"], [\"fxFlex\", \"\"], [\"name\", \"clusterName\", \"type\", \"text\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\", 6, \"placeholder\"], [\"name\", \"itemsPerPage\", \"color\", \"primary\", \"min\", \"5\", \"max\", \"50\", \"step\", \"5\", \"fxFlex\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"fxFlexAlign\", \" center\", 1, \"kd-slider-value\", \"kd-muted\"], [\"name\", \"autoRefreshTimeInterval\", \"color\", \"primary\", \"min\", \"1\", \"max\", \"10\", \"step\", \"1\", \"fxFlex\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"resourceAutoRefreshTimeInterval\", \"color\", \"primary\", \"min\", \"0\", \"max\", \"60\", \"step\", \"5\", \"fxFlex\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"disabled\"], [\"type\", \"button\", \"color\", \"primary\", \"mat-raised-button\", \"\", 3, \"click\"]], template: function GlobalSettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, GlobalSettingsComponent_kd_card_0_Template, 38, 10, \"kd-card\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasLoadError);\n    } }, directives: [i4.NgIf, i5.CardComponent, i6.ɵangular_packages_forms_forms_y, i6.NgControlStatusGroup, i6.NgForm, i7.SettingsEntryComponent, i8.MatFormField, i9.DefaultFlexDirective, i10.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i11.MatSlider, i9.DefaultFlexAlignDirective, i12.MatButton], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(GlobalSettingsComponent, [{\n        type: Component,\n        args: [{ selector: 'kd-global-settings', templateUrl: './template.html' }]\n    }], function () { return [{ type: i1.GlobalSettingsService }, { type: i2.MatDialog }, { type: i3.TitleService }]; }, null);\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<kd-card [initialized]=\"isInitialized()\"\n         [expandable]=\"true\"\n         *ngIf=\"!hasLoadError\">\n  <div title\n       i18n>Global settings</div>\n  <div content>\n    <p i18n>\n      Global settings are stored in config map, so all of them are applied for every instance of the\n      app.\n    </p>\n    <br>\n    <form #form=\"ngForm\"\n          (ngSubmit)=\"save(form)\">\n      <kd-settings-entry key=\"Cluster name\"\n                         i18n-key\n                         desc=\"Cluster name appears in the browser window title if it is set.\"\n                         i18n-desc>\n        <mat-form-field fxFlex>\n          <input [(ngModel)]=\"settings.clusterName\"\n                 name=\"clusterName\"\n                 i18n-placeholder\n                 placeholder=\"Cluster name\"\n                 type=\"text\"\n                 matInput>\n        </mat-form-field>\n      </kd-settings-entry>\n      <kd-settings-entry key=\"Items per page\"\n                         i18n-key\n                         desc=\"Max number of items that can be displayed on each list page.\"\n                         i18n-desc>\n        <div fxFlex>\n          <mat-slider [(ngModel)]=\"settings.itemsPerPage\"\n                      name=\"itemsPerPage\"\n                      color=\"primary\"\n                      min=\"5\"\n                      max=\"50\"\n                      step=\"5\"\n                      fxFlex>\n          </mat-slider>\n          <div class=\"kd-slider-value kd-muted\"\n               fxFlexAlign=\" center\">\n            {{settings.itemsPerPage}}\n          </div>\n        </div>\n      </kd-settings-entry>\n      <kd-settings-entry key=\"Logs auto-refresh time interval\"\n                         i18n-key\n                         desc=\"Number of seconds between every auto-refresh of logs.\"\n                         i18n-desc>\n        <div fxFlex>\n          <mat-slider [(ngModel)]=\"settings.logsAutoRefreshTimeInterval\"\n                      name=\"autoRefreshTimeInterval\"\n                      color=\"primary\"\n                      min=\"1\"\n                      max=\"10\"\n                      step=\"1\"\n                      fxFlex>\n          </mat-slider>\n          <span class=\"kd-slider-value kd-muted\"\n                fxFlexAlign=\" center\">\n            {{settings.logsAutoRefreshTimeInterval}}\n          </span>\n        </div>\n      </kd-settings-entry>\n      <kd-settings-entry key=\"Resource auto-refresh time interval\"\n                         i18n-key\n                         desc=\"Number of seconds between every auto-refresh of every resource. Set 0 to disable.\"\n                         i18n-desc>\n        <div fxFlex>\n          <mat-slider [(ngModel)]=\"settings.resourceAutoRefreshTimeInterval\"\n                      name=\"resourceAutoRefreshTimeInterval\"\n                      color=\"primary\"\n                      min=\"0\"\n                      max=\"60\"\n                      step=\"5\"\n                      fxFlex>\n          </mat-slider>\n          <span class=\"kd-slider-value kd-muted\"\n                fxFlexAlign=\" center\">\n            {{settings.resourceAutoRefreshTimeInterval}}\n          </span>\n        </div>\n      </kd-settings-entry>\n      <br><br>\n      <button [disabled]=\"form.pristine\"\n              type=\"submit\"\n              color=\"primary\"\n              mat-raised-button\n              i18n>\n        Save\n      </button>\n      <button type=\"button\"\n              (click)=\"load(form)\"\n              color=\"primary\"\n              mat-raised-button\n              i18n>\n        Reload\n      </button>\n    </form>\n  </div>\n</kd-card>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {GlobalSettings} from '@api/backendapi';\nimport {GlobalSettingsService} from '../../common/services/global/globalsettings';\nimport {TitleService} from '../../common/services/global/title';\n\nimport {SaveAnywayDialog} from './saveanywaysdialog/dialog';\n\n@Component({selector: 'kd-global-settings', templateUrl: './template.html'})\nexport class GlobalSettingsComponent implements OnInit {\n  // Keep it in sync with ConcurrentSettingsChangeError constant from the backend.\n  private readonly concurrentChangeErr_ = 'settings changed since last reload';\n  settings: GlobalSettings = {} as GlobalSettings;\n  hasLoadError = false;\n\n  constructor(\n    private readonly settings_: GlobalSettingsService,\n    private readonly dialog_: MatDialog,\n    private readonly title_: TitleService,\n  ) {}\n\n  ngOnInit(): void {\n    this.load();\n  }\n\n  isInitialized(): boolean {\n    return this.settings_.isInitialized();\n  }\n\n  load(form?: NgForm): void {\n    if (form) {\n      form.resetForm();\n    }\n\n    this.settings_.load(this.onLoad.bind(this), this.onLoadError.bind(this));\n  }\n\n  onLoad(): void {\n    this.settings.itemsPerPage = this.settings_.getItemsPerPage();\n    this.settings.clusterName = this.settings_.getClusterName();\n    this.settings.logsAutoRefreshTimeInterval = this.settings_.getLogsAutoRefreshTimeInterval();\n    this.settings.resourceAutoRefreshTimeInterval = this.settings_.getResourceAutoRefreshTimeInterval();\n  }\n\n  onLoadError(): void {\n    this.hasLoadError = true;\n  }\n\n  save(form: NgForm): void {\n    this.settings_.save(this.settings).subscribe(\n      () => {\n        this.load(form);\n        this.title_.update();\n        this.settings_.onSettingsUpdate.next();\n      },\n      err => {\n        if (err && err.data.indexOf(this.concurrentChangeErr_) !== -1) {\n          this.dialog_\n            .open(SaveAnywayDialog, {width: '420px'})\n            .afterClosed()\n            .subscribe(result => {\n              if (result === true) {\n                // Backend was refreshed with the PUT request, so the second try will be\n                // successful unless yet another concurrent change will happen. In that case\n                // \"save anyways\" dialog will be shown again.\n                this.save(form);\n              } else {\n                this.load(form);\n              }\n            });\n        }\n      },\n    );\n  }\n}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport { LocalSettingsService } from '../../common/services/global/localsettings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../common/services/global/localsettings\";\nimport * as i2 from \"../../common/components/card/component\";\nimport * as i3 from \"../entry/component\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/slide-toggle\";\nimport * as i6 from \"@angular/forms\";\nvar I18N_0;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_3544585085434493541$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_1 = goog.getMsg(\"Local settings\");\n    I18N_0 = MSG_EXTERNAL_3544585085434493541$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_1;\n}\nelse {\n    I18N_0 = $localize `Local settings`;\n}\nvar I18N_2;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_448160995848623843$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_3 = goog.getMsg(\" Local settings are stored in the browser cookies, so they are not synchronized between multiple devices. Changes are applied automatically on every change. \");\n    I18N_2 = MSG_EXTERNAL_448160995848623843$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_3;\n}\nelse {\n    I18N_2 = $localize ` Local settings are stored in the browser cookies, so they are not synchronized between multiple devices. Changes are applied automatically on every change. `;\n}\nvar I18N_4;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7278213602149834905$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_5 = goog.getMsg(\"Dark theme\");\n    I18N_4 = MSG_EXTERNAL_7278213602149834905$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_5;\n}\nelse {\n    I18N_4 = $localize `Dark theme`;\n}\nvar I18N_6;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_879727275140041165$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_7 = goog.getMsg(\"Use dark theme in the whole app\");\n    I18N_6 = MSG_EXTERNAL_879727275140041165$$___SRC_APP_FRONTEND_SETTINGS_LOCAL_COMPONENT_TS_7;\n}\nelse {\n    I18N_6 = $localize `Use dark theme in the whole app`;\n}\nconst _c8 = [\"key\", I18N_4, \"desc\", I18N_6];\nexport class LocalSettingsComponent {\n    constructor(settings_) {\n        this.settings_ = settings_;\n        this.settings = {};\n    }\n    ngOnInit() {\n        this.settings = this.settings_.get();\n    }\n    onThemeChange() {\n        this.settings_.handleThemeChange(this.settings.isThemeDark);\n    }\n}\n/** @nocollapse */ LocalSettingsComponent.ɵfac = function LocalSettingsComponent_Factory(t) { return new (t || LocalSettingsComponent)(i0.ɵɵdirectiveInject(i1.LocalSettingsService)); };\n/** @nocollapse */ LocalSettingsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LocalSettingsComponent, selectors: [[\"kd-local-settings\"]], decls: 11, vars: 2, consts: [[3, \"expandable\"], [\"title\", \"\"], [\"content\", \"\"], [6, \"key\", \"desc\"], [\"fxFlex\", \"\"], [\"color\", \"primary\", \"name\", \"isThemeDark\", 3, \"ngModel\", \"ngModelChange\", \"change\"]], template: function LocalSettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"kd-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵi18n(2, I18N_0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵi18n(5, I18N_2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementStart(7, \"kd-settings-entry\", 3);\n        i0.ɵɵi18nAttributes(8, _c8);\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"mat-slide-toggle\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LocalSettingsComponent_Template_mat_slide_toggle_ngModelChange_10_listener($event) { return ctx.settings.isThemeDark = $event; })(\"change\", function LocalSettingsComponent_Template_mat_slide_toggle_change_10_listener($event) { return ctx.onThemeChange(); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"expandable\", true);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.settings.isThemeDark);\n    } }, directives: [i2.CardComponent, i3.SettingsEntryComponent, i4.DefaultFlexDirective, i5.MatSlideToggle, i6.NgControlStatus, i6.NgModel], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(LocalSettingsComponent, [{\n        type: Component,\n        args: [{ selector: 'kd-local-settings', templateUrl: './template.html' }]\n    }], function () { return [{ type: i1.LocalSettingsService }]; }, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component, OnInit} from '@angular/core';\nimport {LocalSettings} from '@api/backendapi';\nimport {LocalSettingsService} from '../../common/services/global/localsettings';\n\n@Component({selector: 'kd-local-settings', templateUrl: './template.html'})\nexport class LocalSettingsComponent implements OnInit {\n  settings: LocalSettings = {} as LocalSettings;\n\n  constructor(private readonly settings_: LocalSettingsService) {}\n\n  ngOnInit(): void {\n    this.settings = this.settings_.get();\n  }\n\n  onThemeChange(): void {\n    this.settings_.handleThemeChange(this.settings.isThemeDark);\n  }\n}\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<kd-card [expandable]=\"true\">\n  <div title\n       i18n>Local settings</div>\n  <div content>\n    <p i18n>\n      Local settings are stored in the browser cookies, so they are not synchronized between multiple devices. Changes are applied automatically on every change.\n    </p>\n    <br>\n    <kd-settings-entry key=\"Dark theme\"\n                       i18n-key\n                       desc=\"Use dark theme in the whole app\"\n                       i18n-desc>\n      <div fxFlex>\n        <mat-slide-toggle color=\"primary\"\n                          name=\"isThemeDark\"\n                          [(ngModel)]=\"settings.isThemeDark\"\n                          (change)=\"onThemeChange()\"></mat-slide-toggle>\n      </div>\n    </kd-settings-entry>\n  </div>\n</kd-card>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'kd-settings',\n  template: '<kd-global-settings></kd-global-settings>' + '<kd-local-settings></kd-local-settings>',\n})\nexport class SettingsComponent {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./global/component\";\nimport * as i2 from \"./local/component\";\nexport class SettingsComponent {\n}\n/** @nocollapse */ SettingsComponent.ɵfac = function SettingsComponent_Factory(t) { return new (t || SettingsComponent)(); };\n/** @nocollapse */ SettingsComponent.ɵcmp = i0.ɵɵdefineComponent({ type: SettingsComponent, selectors: [[\"kd-settings\"]], decls: 2, vars: 0, template: function SettingsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-global-settings\");\n        i0.ɵɵelement(1, \"kd-local-settings\");\n    } }, directives: [i1.GlobalSettingsComponent, i2.LocalSettingsComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SettingsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-settings',\n                template: '<kd-global-settings></kd-global-settings>' + '<kd-local-settings></kd-local-settings>',\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\nimport {Route, RouterModule} from '@angular/router';\nimport {SettingsComponent} from './component';\n\nexport const SETTINGS_ROUTE: Route = {\n  path: '',\n  component: SettingsComponent,\n  data: {\n    breadcrumb: 'Settings',\n  },\n};\n\n@NgModule({\n  imports: [RouterModule.forChild([SETTINGS_ROUTE])],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SettingsComponent } from './component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const SETTINGS_ROUTE = {\n    path: '',\n    component: SettingsComponent,\n    data: {\n        breadcrumb: 'Settings',\n    },\n};\nexport class SettingsRoutingModule {\n}\n/** @nocollapse */ SettingsRoutingModule.ɵmod = i0.ɵɵdefineNgModule({ type: SettingsRoutingModule });\n/** @nocollapse */ SettingsRoutingModule.ɵinj = i0.ɵɵdefineInjector({ factory: function SettingsRoutingModule_Factory(t) { return new (t || SettingsRoutingModule)(); }, imports: [[RouterModule.forChild([SETTINGS_ROUTE])],\n        RouterModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SettingsRoutingModule, { imports: [i1.RouterModule], exports: [RouterModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SettingsRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [RouterModule.forChild([SETTINGS_ROUTE])],\n                exports: [RouterModule],\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\n\nimport {ComponentsModule} from '../common/components/module';\nimport {SharedModule} from '../shared.module';\n\nimport {SettingsComponent} from './component';\nimport {SettingsEntryComponent} from './entry/component';\nimport {GlobalSettingsComponent} from './global/component';\nimport {SaveAnywayDialog} from './global/saveanywaysdialog/dialog';\nimport {LocalSettingsComponent} from './local/component';\nimport {SettingsRoutingModule} from './routing';\n\n@NgModule({\n  imports: [SharedModule, ComponentsModule, SettingsRoutingModule],\n  declarations: [\n    GlobalSettingsComponent,\n    LocalSettingsComponent,\n    SettingsComponent,\n    SettingsEntryComponent,\n    SaveAnywayDialog,\n  ],\n  entryComponents: [SaveAnywayDialog],\n})\nexport class SettingsModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { ComponentsModule } from '../common/components/module';\nimport { SharedModule } from '../shared.module';\nimport { SettingsComponent } from './component';\nimport { SettingsEntryComponent } from './entry/component';\nimport { GlobalSettingsComponent } from './global/component';\nimport { SaveAnywayDialog } from './global/saveanywaysdialog/dialog';\nimport { LocalSettingsComponent } from './local/component';\nimport { SettingsRoutingModule } from './routing';\nimport * as i0 from \"@angular/core\";\nexport class SettingsModule {\n}\n/** @nocollapse */ SettingsModule.ɵmod = i0.ɵɵdefineNgModule({ type: SettingsModule });\n/** @nocollapse */ SettingsModule.ɵinj = i0.ɵɵdefineInjector({ factory: function SettingsModule_Factory(t) { return new (t || SettingsModule)(); }, imports: [[SharedModule, ComponentsModule, SettingsRoutingModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(SettingsModule, { declarations: [GlobalSettingsComponent,\n        LocalSettingsComponent,\n        SettingsComponent,\n        SettingsEntryComponent,\n        SaveAnywayDialog], imports: [SharedModule, ComponentsModule, SettingsRoutingModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(SettingsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [SharedModule, ComponentsModule, SettingsRoutingModule],\n                declarations: [\n                    GlobalSettingsComponent,\n                    LocalSettingsComponent,\n                    SettingsComponent,\n                    SettingsEntryComponent,\n                    SaveAnywayDialog,\n                ],\n                entryComponents: [SaveAnywayDialog],\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}