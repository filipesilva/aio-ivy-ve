{"version":3,"sources":["./src/app/frontend/resource/discovery/ingress/detail/component.ts","./src/app/frontend/resource/discovery/ingress/detail/component.ts.pre-build-optimizer.js","./src/app/frontend/resource/discovery/ingress/detail/template.html","./src/app/frontend/resource/discovery/ingress/list/component.ts","./src/app/frontend/resource/discovery/ingress/list/component.ts.pre-build-optimizer.js","./src/app/frontend/resource/discovery/ingress/routing.ts","./src/app/frontend/resource/discovery/ingress/routing.ts.pre-build-optimizer.js","./src/app/frontend/resource/discovery/ingress/module.ts","./src/app/frontend/resource/discovery/ingress/module.ts.pre-build-optimizer.js","./node_modules/rxjs-compat/_esm2015/add/operator/startWith.js.pre-build-optimizer.js","./node_modules/rxjs-compat/_esm2015/operator/startWith.js.pre-build-optimizer.js"],"names":["IngressDetailComponent","ingress_","actionbar_","activatedRoute_","notifications_","endpoint_","resource","ingress","isInitialized","resourceName","this","snapshot","params","resourceNamespace","ingressSubscription_","get","detail","subscribe","d","pushErrors","errors","onInit","emit","objectMeta","typeMeta","unsubscribe","onDetailsLeave","ɵfac","t","ɵcmp","rf","directives","encapsulation","IngressListComponent","INGRESS_LIST_ROUTE","path","component","data","breadcrumb","parent","INGRESS_DETAIL_ROUTE","IngressRoutingModule","ɵmod","ɵinj","factory","IngressModule","Observable","prototype","startWith","array"],"mappings":";;;;;;QA8BO;kBAAMA;gBAMX,YACmBC,UACAC,YACAC,iBACAC;oBAHA,KAAAH,qBACA,KAAAC,yBACA,KAAAC;oBACA,KAAAC,iCARF,KAAAC,YAAY,WAAgBC,SAAS,WAASC,UAAS;oBAExE,KAAAC,iBAAgB;;gBAShB;oBACE,MAAMC,eAAeC,KAAKP,gBAAgBQ,SAASC,OAAOH,cACpDI,oBAAoBH,KAAKP,gBAAgBQ,SAASC,OAAOC;oBAE/DH,KAAKI,uBAAuBJ,KAAKT,SAC9Bc,IAAIL,KAAKL,UAAUW,UAAUP,cAAcI,mBAC3CI,UAAWC;wBACVR,KAAKH,UAAUW,GACfR,KAAKN,eAAee,WAAWD,EAAEE,SACjCV,KAAKR,WAAWmB,OAAOC,KAAK,IAAI,YAAa,WAAWJ,EAAEK,YAAYL,EAAEM;wBACxEd,KAAKF,iBAAgB;;;gBAI3B;oBACEE,KAAKI,qBAAqBW,eAC1Bf,KAAKR,WAAWwB,eAAeJ;;;mBCPhBtB,uBAAuB2B,OAAO,SAAwCC;gBDtB5E,iBAAA5B,wBAAsB;eCuBhBA,uBAAuB6B,OAAO,0BDvBpC;gBAAA,MAAA7B;gBAAsB;gBAAA;gBAAA;gBAAA;gBAAA;oBAAA,UEdnC,2CDuCe,IAAL8B,MCvCM,qDAA6B;;gBDyCpCC,YAAY,EAAC;gBAAyBC,eAAe;;UD3BvD;;QGVA;kBAAMC;mBCFMA,qBAAqBN,OAAO,SAAsCC;gBDExE,iBAAAK;eCDMA,qBAAqBJ,OAAO,0BDClC;gBAAA,MAAAI;gBAAoB;gBAAA;gBAAA;gBAAA;oBAAA,UAFpB;;gBCGJF,YAAY,EAAC;gBAA0BC,eAAe;;UDDxD;;QEGP,MAAME,qBAA4B;YAChCC,MAAM;YACNC,WAAW;YACXC,MAAM;gBACJC,YAAY;gBACZC,Q,4BAAQ;;WAINC,uBAA8B;YAClCL,MAAM;YACNC,WAAW;YACXC,MAAM;gBACJC,YAAY;gBACZC,QAAQL;;;QAQL;kBAAMO;mBCNMA,qBAAqBC,OAAO,yBDMlC;gBAAA,MAAAD;gBCLMA,qBAAqBE,OAAO,yBAAoB;gBAAEC,SAAS,SAAsChB;oBDKvG,iBAAAa;;gBAHD,SAAa,wBAAU,SAAkB,sBAAED,sBAAyC,gBACpF;;UAEL;QE7CP;YAAA;;QA2BO;kBAAMK;mBCLMA,cAAcH,OAAO,yBDK3B;gBAAa;gBCJPG,cAAcF,OAAO,yBAAoB;gBAAEC,SAAS,SAA+BhB;oBDIzF,YAAa;;gBAHd,SAAc,qBAAkB;;UAGrC;;;;;QEzBPkB,WAAA,EAAWC,UAAUC,YCDd,YAAsBC;YACzB,OAAO,uBAAeA,MAAf,CAAsBvC","file":"resource-discovery-ingress-module.js","sourcesContent":["// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport 'rxjs/add/operator/startWith';\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {IngressDetail} from '@api/backendapi';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {ActionbarService, ResourceMeta} from '../../../../common/services/global/actionbar';\nimport {NotificationsService} from '../../../../common/services/global/notifications';\nimport {EndpointManager, Resource} from '../../../../common/services/resource/endpoint';\nimport {NamespacedResourceService} from '../../../../common/services/resource/resource';\n\n@Component({\n  selector: 'kd-ingress-detail',\n  templateUrl: './template.html',\n})\nexport class IngressDetailComponent implements OnInit, OnDestroy {\n  private ingressSubscription_: Subscription;\n  private readonly endpoint_ = EndpointManager.resource(Resource.ingress, true);\n  ingress: IngressDetail;\n  isInitialized = false;\n\n  constructor(\n    private readonly ingress_: NamespacedResourceService<IngressDetail>,\n    private readonly actionbar_: ActionbarService,\n    private readonly activatedRoute_: ActivatedRoute,\n    private readonly notifications_: NotificationsService,\n  ) {}\n\n  ngOnInit(): void {\n    const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n    const resourceNamespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n\n    this.ingressSubscription_ = this.ingress_\n      .get(this.endpoint_.detail(), resourceName, resourceNamespace)\n      .subscribe((d: IngressDetail) => {\n        this.ingress = d;\n        this.notifications_.pushErrors(d.errors);\n        this.actionbar_.onInit.emit(new ResourceMeta('Ingress', d.objectMeta, d.typeMeta));\n        this.isInitialized = true;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.ingressSubscription_.unsubscribe();\n    this.actionbar_.onDetailsLeave.emit();\n  }\n}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport 'rxjs/add/operator/startWith';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionbarService, ResourceMeta } from '../../../../common/services/global/actionbar';\nimport { NotificationsService } from '../../../../common/services/global/notifications';\nimport { EndpointManager, Resource } from '../../../../common/services/resource/endpoint';\nimport { NamespacedResourceService } from '../../../../common/services/resource/resource';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../common/services/resource/resource\";\nimport * as i2 from \"../../../../common/services/global/actionbar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../../common/services/global/notifications\";\nimport * as i5 from \"../../../../common/components/objectmeta/component\";\nexport class IngressDetailComponent {\n    constructor(ingress_, actionbar_, activatedRoute_, notifications_) {\n        this.ingress_ = ingress_;\n        this.actionbar_ = actionbar_;\n        this.activatedRoute_ = activatedRoute_;\n        this.notifications_ = notifications_;\n        this.endpoint_ = EndpointManager.resource(Resource.ingress, true);\n        this.isInitialized = false;\n    }\n    ngOnInit() {\n        const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n        const resourceNamespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n        this.ingressSubscription_ = this.ingress_\n            .get(this.endpoint_.detail(), resourceName, resourceNamespace)\n            .subscribe((d) => {\n            this.ingress = d;\n            this.notifications_.pushErrors(d.errors);\n            this.actionbar_.onInit.emit(new ResourceMeta('Ingress', d.objectMeta, d.typeMeta));\n            this.isInitialized = true;\n        });\n    }\n    ngOnDestroy() {\n        this.ingressSubscription_.unsubscribe();\n        this.actionbar_.onDetailsLeave.emit();\n    }\n}\n/** @nocollapse */ IngressDetailComponent.ɵfac = function IngressDetailComponent_Factory(t) { return new (t || IngressDetailComponent)(i0.ɵɵdirectiveInject(i1.NamespacedResourceService), i0.ɵɵdirectiveInject(i2.ActionbarService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.NotificationsService)); };\n/** @nocollapse */ IngressDetailComponent.ɵcmp = i0.ɵɵdefineComponent({ type: IngressDetailComponent, selectors: [[\"kd-ingress-detail\"]], decls: 1, vars: 2, consts: [[3, \"initialized\", \"objectMeta\"]], template: function IngressDetailComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-object-meta\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"initialized\", ctx.isInitialized)(\"objectMeta\", ctx.ingress == null ? null : ctx.ingress.objectMeta);\n    } }, directives: [i5.ObjectMetaComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(IngressDetailComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-ingress-detail',\n                templateUrl: './template.html',\n            }]\n    }], function () { return [{ type: i1.NamespacedResourceService }, { type: i2.ActionbarService }, { type: i3.ActivatedRoute }, { type: i4.NotificationsService }]; }, null);\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<kd-object-meta [initialized]=\"isInitialized\"\n                [objectMeta]=\"ingress?.objectMeta\"></kd-object-meta>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'kd-ingress-list-state',\n  template: '<kd-ingress-list></kd-ingress-list>',\n})\nexport class IngressListComponent {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../common/components/resourcelist/ingress/component\";\nexport class IngressListComponent {\n}\n/** @nocollapse */ IngressListComponent.ɵfac = function IngressListComponent_Factory(t) { return new (t || IngressListComponent)(); };\n/** @nocollapse */ IngressListComponent.ɵcmp = i0.ɵɵdefineComponent({ type: IngressListComponent, selectors: [[\"kd-ingress-list-state\"]], decls: 1, vars: 0, template: function IngressListComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-ingress-list\");\n    } }, directives: [i1.IngressListComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(IngressListComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-ingress-list-state',\n                template: '<kd-ingress-list></kd-ingress-list>',\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\nimport {Route, RouterModule} from '@angular/router';\nimport {DEFAULT_ACTIONBAR} from '../../../common/components/actionbars/routing';\n\nimport {DISCOVERY_ROUTE} from '../routing';\n\nimport {IngressDetailComponent} from './detail/component';\nimport {IngressListComponent} from './list/component';\n\nconst INGRESS_LIST_ROUTE: Route = {\n  path: '',\n  component: IngressListComponent,\n  data: {\n    breadcrumb: 'Ingresses',\n    parent: DISCOVERY_ROUTE,\n  },\n};\n\nconst INGRESS_DETAIL_ROUTE: Route = {\n  path: ':resourceNamespace/:resourceName',\n  component: IngressDetailComponent,\n  data: {\n    breadcrumb: '{{ resourceName }}',\n    parent: INGRESS_LIST_ROUTE,\n  },\n};\n\n@NgModule({\n  imports: [RouterModule.forChild([INGRESS_LIST_ROUTE, INGRESS_DETAIL_ROUTE, DEFAULT_ACTIONBAR])],\n  exports: [RouterModule],\n})\nexport class IngressRoutingModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DEFAULT_ACTIONBAR } from '../../../common/components/actionbars/routing';\nimport { DISCOVERY_ROUTE } from '../routing';\nimport { IngressDetailComponent } from './detail/component';\nimport { IngressListComponent } from './list/component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst INGRESS_LIST_ROUTE = {\n    path: '',\n    component: IngressListComponent,\n    data: {\n        breadcrumb: 'Ingresses',\n        parent: DISCOVERY_ROUTE,\n    },\n};\nconst INGRESS_DETAIL_ROUTE = {\n    path: ':resourceNamespace/:resourceName',\n    component: IngressDetailComponent,\n    data: {\n        breadcrumb: '{{ resourceName }}',\n        parent: INGRESS_LIST_ROUTE,\n    },\n};\nexport class IngressRoutingModule {\n}\n/** @nocollapse */ IngressRoutingModule.ɵmod = i0.ɵɵdefineNgModule({ type: IngressRoutingModule });\n/** @nocollapse */ IngressRoutingModule.ɵinj = i0.ɵɵdefineInjector({ factory: function IngressRoutingModule_Factory(t) { return new (t || IngressRoutingModule)(); }, imports: [[RouterModule.forChild([INGRESS_LIST_ROUTE, INGRESS_DETAIL_ROUTE, DEFAULT_ACTIONBAR])],\n        RouterModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(IngressRoutingModule, { imports: [i1.RouterModule], exports: [RouterModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(IngressRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [RouterModule.forChild([INGRESS_LIST_ROUTE, INGRESS_DETAIL_ROUTE, DEFAULT_ACTIONBAR])],\n                exports: [RouterModule],\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\n\nimport {ComponentsModule} from '../../../common/components/module';\nimport {SharedModule} from '../../../shared.module';\n\nimport {IngressDetailComponent} from './detail/component';\nimport {IngressListComponent} from './list/component';\nimport {IngressRoutingModule} from './routing';\n\n@NgModule({\n  imports: [SharedModule, ComponentsModule, IngressRoutingModule],\n  declarations: [IngressListComponent, IngressDetailComponent],\n})\nexport class IngressModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { ComponentsModule } from '../../../common/components/module';\nimport { SharedModule } from '../../../shared.module';\nimport { IngressDetailComponent } from './detail/component';\nimport { IngressListComponent } from './list/component';\nimport { IngressRoutingModule } from './routing';\nimport * as i0 from \"@angular/core\";\nexport class IngressModule {\n}\n/** @nocollapse */ IngressModule.ɵmod = i0.ɵɵdefineNgModule({ type: IngressModule });\n/** @nocollapse */ IngressModule.ɵinj = i0.ɵɵdefineInjector({ factory: function IngressModule_Factory(t) { return new (t || IngressModule)(); }, imports: [[SharedModule, ComponentsModule, IngressRoutingModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(IngressModule, { declarations: [IngressListComponent, IngressDetailComponent], imports: [SharedModule, ComponentsModule, IngressRoutingModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(IngressModule, [{\n        type: NgModule,\n        args: [{\n                imports: [SharedModule, ComponentsModule, IngressRoutingModule],\n                declarations: [IngressListComponent, IngressDetailComponent],\n            }]\n    }], null, null);\n","import { Observable } from 'rxjs';\nimport { startWith } from '../../operator/startWith';\nObservable.prototype.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","import { startWith as higherOrder } from 'rxjs/operators';\nexport function startWith(...array) {\n    return higherOrder(...array)(this);\n}\n//# sourceMappingURL=startWith.js.map"],"sourceRoot":"webpack:///"}