{"version":3,"sources":["./src/app/frontend/resource/config/persistentvolumeclaim/detail/component.ts.pre-build-optimizer.js","./src/app/frontend/resource/config/persistentvolumeclaim/detail/template.html","./src/app/frontend/resource/config/persistentvolumeclaim/detail/component.ts","./src/app/frontend/resource/config/persistentvolumeclaim/list/component.ts","./src/app/frontend/resource/config/persistentvolumeclaim/list/component.ts.pre-build-optimizer.js","./src/app/frontend/resource/config/persistentvolumeclaim/routing.ts","./src/app/frontend/resource/config/persistentvolumeclaim/routing.ts.pre-build-optimizer.js","./src/app/frontend/resource/config/persistentvolumeclaim/module.ts","./src/app/frontend/resource/config/persistentvolumeclaim/module.ts.pre-build-optimizer.js"],"names":["I18N_0","I18N_2","I18N_4","I18N_6","I18N_8","PersistentVolumeClaimDetailComponent_div_4_kd_property_1_Template","rf","ctx","ctx_r1314","PersistentVolumeClaimDetailComponent_div_4_kd_property_2_Template","ctx_r1315","PersistentVolumeClaimDetailComponent_div_4_kd_property_3_Template","ctx_r1316","PersistentVolumeClaimDetailComponent_div_4_kd_property_4_Template","ctx_r1317","PersistentVolumeClaimDetailComponent_div_4_Template","ctx_r1313","$localize","PersistentVolumeClaimDetailComponent","persistentVolumeClaim_","actionbar_","activatedRoute_","notifications_","endpoint_","resource","persistentVolumeClaim","isInitialized","resourceName","this","snapshot","params","resourceNamespace","persistentVolumeClaimSubscription_","get","detail","subscribe","d","pushErrors","errors","onInit","emit","objectMeta","typeMeta","unsubscribe","onDetailsLeave","ɵfac","t","ɵcmp","directives","encapsulation","PersistentVolumeClaimListComponent","PERSISTENTVOLUMECLAIM_LIST_ROUTE","path","component","data","breadcrumb","parent","PERSISTENTVOLUMECLAIM_DETAIL_ROUTE","PersistentVolumeClaimRoutingModule","ɵmod","ɵinj","factory","forChild","PersistentVolumeClaimModule"],"mappings":"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","file":"resource-config-persistentvolumeclaim-module.js","sourcesContent":["// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActionbarService, ResourceMeta } from '../../../../common/services/global/actionbar';\nimport { NotificationsService } from '../../../../common/services/global/notifications';\nimport { EndpointManager, Resource } from '../../../../common/services/resource/endpoint';\nimport { NamespacedResourceService } from '../../../../common/services/resource/resource';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../common/services/resource/resource\";\nimport * as i2 from \"../../../../common/services/global/actionbar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../../common/services/global/notifications\";\nimport * as i5 from \"../../../../common/components/objectmeta/component\";\nimport * as i6 from \"../../../../common/components/card/component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"../../../../common/components/property/component\";\nimport * as i10 from \"../../../../common/components/chips/component\";\nvar I18N_0;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_5483358376981519976$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS_1 = goog.getMsg(\"Resource information\");\n    I18N_0 = MSG_EXTERNAL_5483358376981519976$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS_1;\n}\nelse {\n    I18N_0 = $localize `Resource information`;\n}\nvar I18N_2;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_5611592591303869712$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___3 = goog.getMsg(\"Status\");\n    I18N_2 = MSG_EXTERNAL_5611592591303869712$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___3;\n}\nelse {\n    I18N_2 = $localize `Status`;\n}\nfunction PersistentVolumeClaimDetailComponent_div_4_kd_property_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-property\");\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵi18n(2, I18N_2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1314 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1314.persistentVolumeClaim.status);\n} }\nvar I18N_4;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_1748150374925445786$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___5 = goog.getMsg(\"Storage Class\");\n    I18N_4 = MSG_EXTERNAL_1748150374925445786$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___5;\n}\nelse {\n    I18N_4 = $localize `Storage Class`;\n}\nfunction PersistentVolumeClaimDetailComponent_div_4_kd_property_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-property\");\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵi18n(2, I18N_4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1315 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1315.persistentVolumeClaim.storageClass);\n} }\nvar I18N_6;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_7825570888384392250$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___7 = goog.getMsg(\"Capacity\");\n    I18N_6 = MSG_EXTERNAL_7825570888384392250$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___7;\n}\nelse {\n    I18N_6 = $localize `Capacity`;\n}\nfunction PersistentVolumeClaimDetailComponent_div_4_kd_property_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-property\", 9);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵi18n(2, I18N_6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"kd-chips\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1316 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"map\", ctx_r1316.persistentVolumeClaim.capacity);\n} }\nvar I18N_8;\nif (ngI18nClosureMode) {\n    const MSG_EXTERNAL_5055611162892898285$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___9 = goog.getMsg(\"Access Modes\");\n    I18N_8 = MSG_EXTERNAL_5055611162892898285$$___SRC_APP_FRONTEND_RESOURCE_CONFIG_PERSISTENTVOLUMECLAIM_DETAIL_COMPONENT_TS___9;\n}\nelse {\n    I18N_8 = $localize `Access Modes`;\n}\nfunction PersistentVolumeClaimDetailComponent_div_4_kd_property_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"kd-property\", 9);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵi18n(2, I18N_8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵelement(4, \"kd-chips\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1317 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"map\", ctx_r1317.persistentVolumeClaim.accessModes);\n} }\nfunction PersistentVolumeClaimDetailComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, PersistentVolumeClaimDetailComponent_div_4_kd_property_1_Template, 5, 1, \"kd-property\", 5);\n    i0.ɵɵtemplate(2, PersistentVolumeClaimDetailComponent_div_4_kd_property_2_Template, 5, 1, \"kd-property\", 5);\n    i0.ɵɵtemplate(3, PersistentVolumeClaimDetailComponent_div_4_kd_property_3_Template, 5, 1, \"kd-property\", 6);\n    i0.ɵɵtemplate(4, PersistentVolumeClaimDetailComponent_div_4_kd_property_4_Template, 5, 1, \"kd-property\", 6);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1313 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1313.persistentVolumeClaim == null ? null : ctx_r1313.persistentVolumeClaim.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1313.persistentVolumeClaim == null ? null : ctx_r1313.persistentVolumeClaim.storageClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1313.persistentVolumeClaim == null ? null : ctx_r1313.persistentVolumeClaim.capacity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1313.persistentVolumeClaim == null ? null : ctx_r1313.persistentVolumeClaim.accessModes);\n} }\nexport class PersistentVolumeClaimDetailComponent {\n    constructor(persistentVolumeClaim_, actionbar_, activatedRoute_, notifications_) {\n        this.persistentVolumeClaim_ = persistentVolumeClaim_;\n        this.actionbar_ = actionbar_;\n        this.activatedRoute_ = activatedRoute_;\n        this.notifications_ = notifications_;\n        this.endpoint_ = EndpointManager.resource(Resource.persistentVolumeClaim, true);\n        this.isInitialized = false;\n    }\n    ngOnInit() {\n        const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n        const resourceNamespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n        this.persistentVolumeClaimSubscription_ = this.persistentVolumeClaim_\n            .get(this.endpoint_.detail(), resourceName, resourceNamespace)\n            .subscribe((d) => {\n            this.persistentVolumeClaim = d;\n            this.notifications_.pushErrors(d.errors);\n            this.actionbar_.onInit.emit(new ResourceMeta('Persistent Volume Claim', d.objectMeta, d.typeMeta));\n            this.isInitialized = true;\n        });\n    }\n    ngOnDestroy() {\n        this.persistentVolumeClaimSubscription_.unsubscribe();\n        this.actionbar_.onDetailsLeave.emit();\n    }\n}\n/** @nocollapse */ PersistentVolumeClaimDetailComponent.ɵfac = function PersistentVolumeClaimDetailComponent_Factory(t) { return new (t || PersistentVolumeClaimDetailComponent)(i0.ɵɵdirectiveInject(i1.NamespacedResourceService), i0.ɵɵdirectiveInject(i2.ActionbarService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.NotificationsService)); };\n/** @nocollapse */ PersistentVolumeClaimDetailComponent.ɵcmp = i0.ɵɵdefineComponent({ type: PersistentVolumeClaimDetailComponent, selectors: [[\"kd-persistent-volume-claim-detail\"]], decls: 5, vars: 4, consts: [[3, \"initialized\", \"objectMeta\"], [3, \"initialized\"], [\"title\", \"\"], [\"content\", \"\", \"fxLayout\", \"row wrap\", 4, \"ngIf\"], [\"content\", \"\", \"fxLayout\", \"row wrap\"], [4, \"ngIf\"], [\"fxFlex\", \"100\", 4, \"ngIf\"], [\"key\", \"\"], [\"value\", \"\"], [\"fxFlex\", \"100\"], [3, \"map\"]], template: function PersistentVolumeClaimDetailComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-object-meta\", 0);\n        i0.ɵɵelementStart(1, \"kd-card\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵi18n(3, I18N_0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, PersistentVolumeClaimDetailComponent_div_4_Template, 5, 4, \"div\", 3);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"initialized\", ctx.isInitialized)(\"objectMeta\", ctx.persistentVolumeClaim == null ? null : ctx.persistentVolumeClaim.objectMeta);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"initialized\", ctx.isInitialized);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInitialized);\n    } }, directives: [i5.ObjectMetaComponent, i6.CardComponent, i7.NgIf, i8.DefaultLayoutDirective, i9.PropertyComponent, i8.DefaultFlexDirective, i10.ChipsComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(PersistentVolumeClaimDetailComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-persistent-volume-claim-detail',\n                templateUrl: './template.html',\n            }]\n    }], function () { return [{ type: i1.NamespacedResourceService }, { type: i2.ActionbarService }, { type: i3.ActivatedRoute }, { type: i4.NotificationsService }]; }, null);\n","<!--\nCopyright 2017 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<kd-object-meta [initialized]=\"isInitialized\"\n                [objectMeta]=\"persistentVolumeClaim?.objectMeta\"></kd-object-meta>\n\n<kd-card [initialized]=\"isInitialized\">\n  <div title\n       i18n>Resource information</div>\n  <div content\n       *ngIf=\"isInitialized\"\n       fxLayout=\"row wrap\">\n    <kd-property *ngIf=\"persistentVolumeClaim?.status\">\n      <div key\n           i18n>Status</div>\n      <div value>{{persistentVolumeClaim.status}}</div>\n    </kd-property>\n    <kd-property *ngIf=\"persistentVolumeClaim?.storageClass\">\n      <div key\n           i18n>Storage Class</div>\n      <div value>{{persistentVolumeClaim.storageClass}}</div>\n    </kd-property>\n    <kd-property *ngIf=\"persistentVolumeClaim?.capacity\"\n                 fxFlex=\"100\">\n      <div key\n           i18n>Capacity</div>\n      <div value>\n        <kd-chips [map]=\"persistentVolumeClaim.capacity\"></kd-chips>\n      </div>\n    </kd-property>\n    <kd-property *ngIf=\"persistentVolumeClaim?.accessModes\"\n                 fxFlex=\"100\">\n      <div key\n           i18n>Access Modes</div>\n      <div value>\n        <kd-chips [map]=\"persistentVolumeClaim.accessModes\"></kd-chips>\n      </div>\n    </kd-property>\n  </div>\n</kd-card>\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {PersistentVolumeClaimDetail} from '@api/backendapi';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {ActionbarService, ResourceMeta} from '../../../../common/services/global/actionbar';\nimport {NotificationsService} from '../../../../common/services/global/notifications';\nimport {EndpointManager, Resource} from '../../../../common/services/resource/endpoint';\nimport {NamespacedResourceService} from '../../../../common/services/resource/resource';\n\n@Component({\n  selector: 'kd-persistent-volume-claim-detail',\n  templateUrl: './template.html',\n})\nexport class PersistentVolumeClaimDetailComponent implements OnInit, OnDestroy {\n  private persistentVolumeClaimSubscription_: Subscription;\n  private readonly endpoint_ = EndpointManager.resource(Resource.persistentVolumeClaim, true);\n  persistentVolumeClaim: PersistentVolumeClaimDetail;\n  isInitialized = false;\n\n  constructor(\n    private readonly persistentVolumeClaim_: NamespacedResourceService<PersistentVolumeClaimDetail>,\n    private readonly actionbar_: ActionbarService,\n    private readonly activatedRoute_: ActivatedRoute,\n    private readonly notifications_: NotificationsService,\n  ) {}\n\n  ngOnInit(): void {\n    const resourceName = this.activatedRoute_.snapshot.params.resourceName;\n    const resourceNamespace = this.activatedRoute_.snapshot.params.resourceNamespace;\n\n    this.persistentVolumeClaimSubscription_ = this.persistentVolumeClaim_\n      .get(this.endpoint_.detail(), resourceName, resourceNamespace)\n      .subscribe((d: PersistentVolumeClaimDetail) => {\n        this.persistentVolumeClaim = d;\n        this.notifications_.pushErrors(d.errors);\n        this.actionbar_.onInit.emit(\n          new ResourceMeta('Persistent Volume Claim', d.objectMeta, d.typeMeta),\n        );\n        this.isInitialized = true;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.persistentVolumeClaimSubscription_.unsubscribe();\n    this.actionbar_.onDetailsLeave.emit();\n  }\n}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Component} from '@angular/core';\n\n@Component({\n  selector: 'kd-persistent-volume-claim-list-state',\n  template: '<kd-persistent-volume-claim-list></kd-persistent-volume-claim-list>',\n})\nexport class PersistentVolumeClaimListComponent {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../common/components/resourcelist/persistentvolumeclaim/component\";\nexport class PersistentVolumeClaimListComponent {\n}\n/** @nocollapse */ PersistentVolumeClaimListComponent.ɵfac = function PersistentVolumeClaimListComponent_Factory(t) { return new (t || PersistentVolumeClaimListComponent)(); };\n/** @nocollapse */ PersistentVolumeClaimListComponent.ɵcmp = i0.ɵɵdefineComponent({ type: PersistentVolumeClaimListComponent, selectors: [[\"kd-persistent-volume-claim-list-state\"]], decls: 1, vars: 0, template: function PersistentVolumeClaimListComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"kd-persistent-volume-claim-list\");\n    } }, directives: [i1.PersistentVolumeClaimListComponent], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(PersistentVolumeClaimListComponent, [{\n        type: Component,\n        args: [{\n                selector: 'kd-persistent-volume-claim-list-state',\n                template: '<kd-persistent-volume-claim-list></kd-persistent-volume-claim-list>',\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\nimport {Route, RouterModule} from '@angular/router';\nimport {DEFAULT_ACTIONBAR} from '../../../common/components/actionbars/routing';\n\nimport {CONFIG_ROUTE} from '../routing';\n\nimport {PersistentVolumeClaimDetailComponent} from './detail/component';\nimport {PersistentVolumeClaimListComponent} from './list/component';\n\nconst PERSISTENTVOLUMECLAIM_LIST_ROUTE: Route = {\n  path: '',\n  component: PersistentVolumeClaimListComponent,\n  data: {\n    breadcrumb: 'Persistent Volume Claims',\n    parent: CONFIG_ROUTE,\n  },\n};\n\nconst PERSISTENTVOLUMECLAIM_DETAIL_ROUTE: Route = {\n  path: ':resourceNamespace/:resourceName',\n  component: PersistentVolumeClaimDetailComponent,\n  data: {\n    breadcrumb: '{{ resourceName }}',\n    parent: PERSISTENTVOLUMECLAIM_LIST_ROUTE,\n  },\n};\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      PERSISTENTVOLUMECLAIM_LIST_ROUTE,\n      PERSISTENTVOLUMECLAIM_DETAIL_ROUTE,\n      DEFAULT_ACTIONBAR,\n    ]),\n  ],\n  exports: [RouterModule],\n})\nexport class PersistentVolumeClaimRoutingModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DEFAULT_ACTIONBAR } from '../../../common/components/actionbars/routing';\nimport { CONFIG_ROUTE } from '../routing';\nimport { PersistentVolumeClaimDetailComponent } from './detail/component';\nimport { PersistentVolumeClaimListComponent } from './list/component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst PERSISTENTVOLUMECLAIM_LIST_ROUTE = {\n    path: '',\n    component: PersistentVolumeClaimListComponent,\n    data: {\n        breadcrumb: 'Persistent Volume Claims',\n        parent: CONFIG_ROUTE,\n    },\n};\nconst PERSISTENTVOLUMECLAIM_DETAIL_ROUTE = {\n    path: ':resourceNamespace/:resourceName',\n    component: PersistentVolumeClaimDetailComponent,\n    data: {\n        breadcrumb: '{{ resourceName }}',\n        parent: PERSISTENTVOLUMECLAIM_LIST_ROUTE,\n    },\n};\nexport class PersistentVolumeClaimRoutingModule {\n}\n/** @nocollapse */ PersistentVolumeClaimRoutingModule.ɵmod = i0.ɵɵdefineNgModule({ type: PersistentVolumeClaimRoutingModule });\n/** @nocollapse */ PersistentVolumeClaimRoutingModule.ɵinj = i0.ɵɵdefineInjector({ factory: function PersistentVolumeClaimRoutingModule_Factory(t) { return new (t || PersistentVolumeClaimRoutingModule)(); }, imports: [[\n            RouterModule.forChild([\n                PERSISTENTVOLUMECLAIM_LIST_ROUTE,\n                PERSISTENTVOLUMECLAIM_DETAIL_ROUTE,\n                DEFAULT_ACTIONBAR,\n            ]),\n        ],\n        RouterModule] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(PersistentVolumeClaimRoutingModule, { imports: [i1.RouterModule], exports: [RouterModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(PersistentVolumeClaimRoutingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    RouterModule.forChild([\n                        PERSISTENTVOLUMECLAIM_LIST_ROUTE,\n                        PERSISTENTVOLUMECLAIM_DETAIL_ROUTE,\n                        DEFAULT_ACTIONBAR,\n                    ]),\n                ],\n                exports: [RouterModule],\n            }]\n    }], null, null);\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {NgModule} from '@angular/core';\n\nimport {ComponentsModule} from '../../../common/components/module';\nimport {SharedModule} from '../../../shared.module';\n\nimport {PersistentVolumeClaimDetailComponent} from './detail/component';\nimport {PersistentVolumeClaimListComponent} from './list/component';\nimport {PersistentVolumeClaimRoutingModule} from './routing';\n\n@NgModule({\n  imports: [SharedModule, ComponentsModule, PersistentVolumeClaimRoutingModule],\n  declarations: [PersistentVolumeClaimListComponent, PersistentVolumeClaimDetailComponent],\n})\nexport class PersistentVolumeClaimModule {}\n","// Copyright 2017 The Kubernetes Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { ComponentsModule } from '../../../common/components/module';\nimport { SharedModule } from '../../../shared.module';\nimport { PersistentVolumeClaimDetailComponent } from './detail/component';\nimport { PersistentVolumeClaimListComponent } from './list/component';\nimport { PersistentVolumeClaimRoutingModule } from './routing';\nimport * as i0 from \"@angular/core\";\nexport class PersistentVolumeClaimModule {\n}\n/** @nocollapse */ PersistentVolumeClaimModule.ɵmod = i0.ɵɵdefineNgModule({ type: PersistentVolumeClaimModule });\n/** @nocollapse */ PersistentVolumeClaimModule.ɵinj = i0.ɵɵdefineInjector({ factory: function PersistentVolumeClaimModule_Factory(t) { return new (t || PersistentVolumeClaimModule)(); }, imports: [[SharedModule, ComponentsModule, PersistentVolumeClaimRoutingModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(PersistentVolumeClaimModule, { declarations: [PersistentVolumeClaimListComponent, PersistentVolumeClaimDetailComponent], imports: [SharedModule, ComponentsModule, PersistentVolumeClaimRoutingModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(PersistentVolumeClaimModule, [{\n        type: NgModule,\n        args: [{\n                imports: [SharedModule, ComponentsModule, PersistentVolumeClaimRoutingModule],\n                declarations: [PersistentVolumeClaimListComponent, PersistentVolumeClaimDetailComponent],\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}