{
  "id": "guide/migration-undecorated-classes",
  "title": "Undecorated classes migration (DI)",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/migration-undecorated-classes.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"undecorated-classes-migration-di\">Undecorated classes migration (DI)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#undecorated-classes-migration-di\"><i class=\"material-icons\">link</i></a></h1>\n<p>This section discusses an Angular version 9 schematic that migrates\ntwo inheritance patterns that need to be updated to work with Ivy.</p>\n<h2 id=\"what-does-this-migration-do\">What does this migration do?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#what-does-this-migration-do\"><i class=\"material-icons\">link</i></a></h2>\n<p>This migration adds an empty <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> decorator to undecorated\nbase classes that are extended by either directives or components.</p>\n<p>  Before:</p>\n<code-example language=\"ts\">\nexport class BaseMenu {\n  constructor(private vcr: <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a>) {}\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: '[settingsMenu]'})\nexport class SettingsMenu extends BaseMenu {}\n</code-example>\n<p>  After:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()\nexport class BaseMenu {\n  constructor(private vcr: <a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a>) {}\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: '[settingsMenu]'})\nexport class SettingsMenu extends BaseMenu {}\n</code-example>\n<p>The schematic also copies any inherited directive or component metadata to the derived class.</p>\n<p>Before:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'base-menu',\n  template: '&#x3C;div>&#x3C;/div>'\n})\nclass BaseMenu {}\n\nexport class SettingsMenu extends BaseMenu {}\n</code-example>\n<p>After:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'base-menu',\n  template: '&#x3C;div>&#x3C;/div>'\n})\nclass BaseMenu {}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'settings-menu',\n  template: '&#x3C;div>&#x3C;/div>'\n})\nexport class SettingsMenu extends BaseMenu {}\n</code-example>\n<h2 id=\"why-is-this-migration-necessary\">Why is this migration necessary?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#why-is-this-migration-necessary\"><i class=\"material-icons\">link</i></a></h2>\n<p>When a class has a <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> or <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> decorator,\nthe Angular compiler generates extra code to inject dependencies into\nthe constructor. When using inheritance, Ivy needs both the parent class\nand the child class to apply a decorator to generate the correct code.</p>\n<p>You can think of this change as two cases: a parent class is missing a\ndecorator or a child class is missing a decorator. In both scenarios,\nAngular's run-time needs additional information from the compiler.\nThis additional information comes from adding decorators.</p>\n<h3 id=\"decorator-missing-from-parent-class\">Decorator missing from parent class<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#decorator-missing-from-parent-class\"><i class=\"material-icons\">link</i></a></h3>\n<p>When the decorator is missing from the parent class,\nthe subclass will inherit a constructor from a class for\nwhich the compiler did not generate special constructor\ninfo (because it was not decorated as a directive).\nWhen Angular then tries to create the subclass,\nit doesn't have the correct info\nto create it.</p>\n<p>In View Engine, the compiler has global knowledge, so it\ncan look up the missing data. However, the Ivy compiler\nonly processes each directive in isolation. This means that\ncompilation can be faster, but the compiler can't\nautomatically infer the same\ninformation as before. Adding the <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> explicitly\nprovides this information.</p>\n<p>In the future, add <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> to base classes that\ndo not already have decorators and are extended by directives.</p>\n<h3 id=\"decorator-missing-from-child-class\">Decorator missing from child class<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#decorator-missing-from-child-class\"><i class=\"material-icons\">link</i></a></h3>\n<p>When the child class is missing the decorator, the\nchild class inherits from the\nparent class yet has no decorators of its own.\nWithout a decorator, the compiler has no way of knowing\nthat the class is a <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> or <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>, so\nit doesn't generate the proper instructions for the directive.</p>\n<h2 id=\"what-does-it-mean-to-have-a-directive-decorator-with-no-metadata-inside-of-it\">What does it mean to have a <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> decorator with no metadata inside of it?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#what-does-it-mean-to-have-a-directive-decorator-with-no-metadata-inside-of-it\"><i class=\"material-icons\">link</i></a></h2>\n<p>The presence of the <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> decorator causes Angular to generate\nextra code for the affected class. If that decorator includes no\nproperties (metadata),\nthe directive won't be matched to elements or instantiated\ndirectly, but other classes that <em>extend</em> the\ndirective class will inherit this generated code. You can think of\nthis as an \"abstract\" directive.</p>\n<p>Adding an abstract directive to an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> will cause an error.\nA directive must have a <code>selector</code> property defined in order to match some element in a template.</p>\n<h2 id=\"when-do-i-need-a-directive-decorator-without-a-selector\">When do I need a <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> decorator without a selector?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#when-do-i-need-a-directive-decorator-without-a-selector\"><i class=\"material-icons\">link</i></a></h2>\n<p>If you're using dependency injection, or any Angular-specific\nfeature, such as <code>@<a href=\"api/core/HostBinding\" class=\"code-anchor\">HostBinding</a>()</code>, <code>@<a href=\"api/core/ViewChild\" class=\"code-anchor\">ViewChild</a>()</code>, or <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code>, you need a\n<code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> or <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> decorator.\nThe decorator lets the compiler know to generate the correct\ninstructions to create that class and any classes that extend it.\nIf you don't want to use that base class as a directive directly, leave\nthe selector blank. If you do want it to be usable independently,\nfill in the metadata as usual.</p>\n<p>Classes that don't use Angular features don't need an Angular decorator.</p>\n<h2 id=\"im-a-library-author-should-i-add-the-directive-decorator-to-base-classes\">I'm a library author. Should I add the <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> decorator to base classes?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/migration-undecorated-classes#im-a-library-author-should-i-add-the-directive-decorator-to-base-classes\"><i class=\"material-icons\">link</i></a></h2>\n<p>As support for selectorless decorators is introduced in\nAngular version 9, if you want to support Angular version 8 and earlier, you\nshouldn't add a selectorless <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> decorator.\nYou can either add <code>@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>()</code> with a selector or\nadd an explicit constructor to affected subclasses.</p>\n\n</div>\n\n<!-- links to this doc:\n - guide/deprecations\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/Directive\n - api/core/HostBinding\n - api/core/Input\n - api/core/NgModule\n - api/core/ViewChild\n - api/core/ViewContainerRef\n - guide/migration-undecorated-classes#decorator-missing-from-child-class\n - guide/migration-undecorated-classes#decorator-missing-from-parent-class\n - guide/migration-undecorated-classes#im-a-library-author-should-i-add-the-directive-decorator-to-base-classes\n - guide/migration-undecorated-classes#undecorated-classes-migration-di\n - guide/migration-undecorated-classes#what-does-it-mean-to-have-a-directive-decorator-with-no-metadata-inside-of-it\n - guide/migration-undecorated-classes#what-does-this-migration-do\n - guide/migration-undecorated-classes#when-do-i-need-a-directive-decorator-without-a-selector\n - guide/migration-undecorated-classes#why-is-this-migration-necessary\n - https://github.com/angular/angular/edit/master/aio/content/guide/migration-undecorated-classes.md?message=docs%3A%20describe%20your%20change...\n-->"
}