{"version":3,"sources":["./src/app/custom-elements/api/api.service.ts","./src/app/custom-elements/api/api.service.ts.pre-build-optimizer.js","./src/app/custom-elements/api/api-list.component.ts.pre-build-optimizer.js","./src/app/custom-elements/api/api-list.component.html","./src/app/custom-elements/api/api-list.component.ts","./src/app/custom-elements/api/api-list.module.ts","./src/app/custom-elements/api/api-list.module.ts.pre-build-optimizer.js"],"names":["ApiService","http","logger","apiBase","apiListJsonDefault","firstTime","onDestroy","Subject","sectionsSubject","ReplaySubject","_sections","this","pipe","takeUntil","fetchSections","subscribe","sections","log","length","tap","forEach","section","deprecated","items","every","item","stability","next","src","url","get","err","error","ɵfac","t","ɵprov","token","_c0","ApiListComponent_div_9_h2_1_Template","rf","ctx","section_r55","$implicit","ApiListComponent_div_9_ul_2_ng_container_1_Template","item_r60","ApiListComponent_div_9_ul_2_Template","ApiListComponent_div_9_Template","SearchCriteria","query","status","type","ApiListComponent","apiService","locationService","showStatusMenu","showTypeMenu","criteriaSubject","searchCriteria","types","value","title","statuses","filteredSections","combineLatest","map","results","criteria","filterSection","initializeSearchCriteria","setSearchCriteria","toLowerCase","trim","toggleStatusMenu","toggleTypeMenu","sectionNameMatches","name","indexOf","filter","docType","matchesType","securityRisk","matchesStatus","matchesQuery","search","q","queryEl","nativeElement","find","x","setSearch","undefined","Object","assign","setLocationSearch","ɵcmp","_t","first","decls","vars","consts","template","setType","setStatus","setQuery","directives","pipes","encapsulation","ApiListModule","customElementComponent","ɵmod","ɵinj","factory"],"mappings":"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","file":"api-api-list-module.js","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\n\nimport { Logger } from 'app/shared/logger.service';\nimport { DOC_CONTENT_URL_PREFIX } from 'app/documents/document.service';\n\nexport interface ApiItem {\n  name: string;\n  title: string;\n  path: string;\n  docType: string;\n  stability: string;\n  securityRisk: boolean;\n}\n\nexport interface ApiSection {\n  path: string;\n  name: string;\n  title: string;\n  deprecated: boolean;\n  items: ApiItem[]|null;\n}\n\n@Injectable()\nexport class ApiService implements OnDestroy {\n\n  private apiBase = DOC_CONTENT_URL_PREFIX + 'api/';\n  private apiListJsonDefault = 'api-list.json';\n  private firstTime = true;\n  private onDestroy = new Subject();\n  private sectionsSubject = new ReplaySubject<ApiSection[]>(1);\n  private _sections = this.sectionsSubject.pipe(takeUntil(this.onDestroy));\n\n  /**\n   * Return a cached observable of API sections from a JSON file.\n   * API sections is an array of Angular top modules and metadata about their API documents (items).\n   */\n  get sections() {\n\n    if (this.firstTime) {\n      this.firstTime = false;\n      this.fetchSections(); // TODO: get URL for fetchSections by configuration?\n\n      // makes sectionsSubject hot; subscribe ensures stays alive (always refCount > 0);\n      this._sections.subscribe(sections => this.logger.log(`ApiService got API ${sections.length} section(s)`));\n    }\n\n    return this._sections.pipe(tap(sections => {\n      sections.forEach(section => {\n        section.deprecated = !!section.items &&\n            section.items.every(item => item.stability === 'deprecated');\n      });\n    }));\n  }\n\n  constructor(private http: HttpClient, private logger: Logger) { }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n  }\n\n /**\n  * Fetch API sections from a JSON file.\n  * API sections is an array of Angular top modules and metadata about their API documents (items).\n  * Updates `sections` observable\n  *\n  * @param {string} [src] - Name of the api list JSON file\n  */\n  fetchSections(src?: string) {\n    // TODO: get URL by configuration?\n    const url = this.apiBase + (src || this.apiListJsonDefault);\n    this.http.get<ApiSection[]>(url)\n      .pipe(\n        takeUntil(this.onDestroy),\n        tap(() => this.logger.log(`Got API sections from ${url}`)),\n      )\n      .subscribe(\n        sections => this.sectionsSubject.next(sections),\n        (err: HttpErrorResponse) => {\n          // TODO: handle error\n          this.logger.error(err);\n          throw err; // rethrow for now.\n        }\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { DOC_CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/shared/logger.service\";\nexport class ApiService {\n    constructor(http, logger) {\n        this.http = http;\n        this.logger = logger;\n        this.apiBase = DOC_CONTENT_URL_PREFIX + 'api/';\n        this.apiListJsonDefault = 'api-list.json';\n        this.firstTime = true;\n        this.onDestroy = new Subject();\n        this.sectionsSubject = new ReplaySubject(1);\n        this._sections = this.sectionsSubject.pipe(takeUntil(this.onDestroy));\n    }\n    /**\n     * Return a cached observable of API sections from a JSON file.\n     * API sections is an array of Angular top modules and metadata about their API documents (items).\n     */\n    get sections() {\n        if (this.firstTime) {\n            this.firstTime = false;\n            this.fetchSections(); // TODO: get URL for fetchSections by configuration?\n            // makes sectionsSubject hot; subscribe ensures stays alive (always refCount > 0);\n            this._sections.subscribe(sections => this.logger.log(`ApiService got API ${sections.length} section(s)`));\n        }\n        return this._sections.pipe(tap(sections => {\n            sections.forEach(section => {\n                section.deprecated = !!section.items &&\n                    section.items.every(item => item.stability === 'deprecated');\n            });\n        }));\n    }\n    ngOnDestroy() {\n        this.onDestroy.next();\n    }\n    /**\n     * Fetch API sections from a JSON file.\n     * API sections is an array of Angular top modules and metadata about their API documents (items).\n     * Updates `sections` observable\n     *\n     * @param {string} [src] - Name of the api list JSON file\n     */\n    fetchSections(src) {\n        // TODO: get URL by configuration?\n        const url = this.apiBase + (src || this.apiListJsonDefault);\n        this.http.get(url)\n            .pipe(takeUntil(this.onDestroy), tap(() => this.logger.log(`Got API sections from ${url}`)))\n            .subscribe(sections => this.sectionsSubject.next(sections), (err) => {\n            // TODO: handle error\n            this.logger.error(err);\n            throw err; // rethrow for now.\n        });\n    }\n}\nApiService.ɵfac = function ApiService_Factory(t) { return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Logger)); };\nApiService.ɵprov = i0.ɵɵdefineInjectable({ token: ApiService, factory: function (t) { return ApiService.ɵfac(t); }, providedIn: null });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ApiService, [{\n        type: Injectable\n    }], function () { return [{ type: i1.HttpClient }, { type: i2.Logger }]; }, null);\n","/*\n* API List & Filter Component\n*\n* A page that displays a formatted list of the public Angular API entities.\n* Clicking on a list item triggers navigation to the corresponding API entity document.\n* Can add/remove API entity links based on filter settings.\n*/\nimport { Component, ViewChild } from '@angular/core';\nimport { combineLatest, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"app/shared/location.service\";\nimport * as i3 from \"../../shared/select/select.component\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"filter\"];\nfunction ApiListComponent_div_9_h2_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵelementStart(1, \"a\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const section_r55 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"deprecated-api-item\", section_r55.deprecated);\n    i0.ɵɵproperty(\"href\", section_r55.path, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(section_r55.title);\n} }\nfunction ApiListComponent_div_9_ul_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 13);\n    i0.ɵɵelementStart(2, \"a\", 11);\n    i0.ɵɵelement(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const item_r60 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"deprecated-api-item\", item_r60.stability === \"deprecated\");\n    i0.ɵɵproperty(\"href\", item_r60.path, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"symbol \", item_r60.docType, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r60.title, \" \");\n} }\nfunction ApiListComponent_div_9_ul_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 12);\n    i0.ɵɵtemplate(1, ApiListComponent_div_9_ul_2_ng_container_1_Template, 5, 6, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const section_r55 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r55.items);\n} }\nfunction ApiListComponent_div_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ApiListComponent_div_9_h2_1_Template, 3, 3, \"h2\", 9);\n    i0.ɵɵtemplate(2, ApiListComponent_div_9_ul_2_Template, 2, 1, \"ul\", 10);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const section_r55 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r55.items);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r55.items && section_r55.items.length);\n} }\nclass SearchCriteria {\n    constructor() {\n        this.query = '';\n        this.status = 'all';\n        this.type = 'all';\n    }\n}\nexport class ApiListComponent {\n    constructor(apiService, locationService) {\n        this.apiService = apiService;\n        this.locationService = locationService;\n        this.showStatusMenu = false;\n        this.showTypeMenu = false;\n        this.criteriaSubject = new ReplaySubject(1);\n        this.searchCriteria = new SearchCriteria();\n        // API types\n        this.types = [\n            { value: 'all', title: 'All' },\n            { value: 'class', title: 'Class' },\n            { value: 'const', title: 'Const' },\n            { value: 'decorator', title: 'Decorator' },\n            { value: 'directive', title: 'Directive' },\n            { value: 'enum', title: 'Enum' },\n            { value: 'function', title: 'Function' },\n            { value: 'interface', title: 'Interface' },\n            { value: 'pipe', title: 'Pipe' },\n            { value: 'ngmodule', title: 'NgModule' },\n            { value: 'type-alias', title: 'Type alias' },\n            { value: 'package', title: 'Package' }\n        ];\n        this.statuses = [\n            { value: 'all', title: 'All' },\n            { value: 'deprecated', title: 'Deprecated' },\n            { value: 'security-risk', title: 'Security Risk' }\n        ];\n    }\n    ngOnInit() {\n        this.filteredSections =\n            combineLatest([\n                this.apiService.sections,\n                this.criteriaSubject,\n            ]).pipe(map(results => ({ sections: results[0], criteria: results[1] })), map(results => (results.sections\n                .map(section => (Object.assign(Object.assign({}, section), { items: this.filterSection(section, results.criteria) }))))));\n        this.initializeSearchCriteria();\n    }\n    // TODO: may need to debounce as the original did\n    // although there shouldn't be any perf consequences if we don't\n    setQuery(query) {\n        this.setSearchCriteria({ query: (query || '').toLowerCase().trim() });\n    }\n    setStatus(status) {\n        this.toggleStatusMenu();\n        this.status = status;\n        this.setSearchCriteria({ status: status.value });\n    }\n    setType(type) {\n        this.toggleTypeMenu();\n        this.type = type;\n        this.setSearchCriteria({ type: type.value });\n    }\n    toggleStatusMenu() {\n        this.showStatusMenu = !this.showStatusMenu;\n    }\n    toggleTypeMenu() {\n        this.showTypeMenu = !this.showTypeMenu;\n    }\n    //////// Private //////////\n    filterSection(section, { query, status, type }) {\n        const sectionNameMatches = !query || section.name.indexOf(query) !== -1;\n        const matchesQuery = (item) => sectionNameMatches || item.name.indexOf(query) !== -1;\n        const matchesStatus = (item) => status === 'all' || status === item.stability || (status === 'security-risk' && item.securityRisk);\n        const matchesType = (item) => type === 'all' || type === item.docType;\n        const items = section.items.filter(item => matchesType(item) && matchesStatus(item) && matchesQuery(item));\n        // If there are no items we still return an empty array if the section name matches and the type is 'package'\n        return items.length ? items : (sectionNameMatches && type === 'package') ? [] : null;\n    }\n    // Get initial search criteria from URL search params\n    initializeSearchCriteria() {\n        const { query, status, type } = this.locationService.search();\n        const q = (query || '').toLowerCase();\n        // Hack: can't bind to query because input cursor always forced to end-of-line.\n        this.queryEl.nativeElement.value = q;\n        this.status = this.statuses.find(x => x.value === status) || this.statuses[0];\n        this.type = this.types.find(x => x.value === type) || this.types[0];\n        this.searchCriteria = {\n            query: q,\n            status: this.status.value,\n            type: this.type.value\n        };\n        this.criteriaSubject.next(this.searchCriteria);\n    }\n    setLocationSearch() {\n        const { query, status, type } = this.searchCriteria;\n        const params = {\n            query: query ? query : undefined,\n            status: status !== 'all' ? status : undefined,\n            type: type !== 'all' ? type : undefined\n        };\n        this.locationService.setSearch('API Search', params);\n    }\n    setSearchCriteria(criteria) {\n        this.criteriaSubject.next(Object.assign(this.searchCriteria, criteria));\n        this.setLocationSearch();\n    }\n}\nApiListComponent.ɵfac = function ApiListComponent_Factory(t) { return new (t || ApiListComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.LocationService)); };\nApiListComponent.ɵcmp = i0.ɵɵdefineComponent({ type: ApiListComponent, selectors: [[\"aio-api-list\"]], viewQuery: function ApiListComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.queryEl = _t.first);\n    } }, decls: 11, vars: 9, consts: [[1, \"l-flex-wrap\", \"api-filter\"], [\"label\", \"Type:\", 3, \"options\", \"selected\", \"showSymbol\", \"change\"], [\"label\", \"Status:\", 3, \"options\", \"selected\", \"disabled\", \"change\"], [1, \"form-search\"], [\"placeholder\", \"Filter\", \"aria-label\", \"Filter Search\", 3, \"input\"], [\"filter\", \"\"], [1, \"material-icons\"], [1, \"api-list-container\", \"l-content-small\", \"docs-content\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"api-list\", 4, \"ngIf\"], [3, \"href\"], [1, \"api-list\"], [1, \"api-item\"]], template: function ApiListComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"aio-select\", 1);\n        i0.ɵɵlistener(\"change\", function ApiListComponent_Template_aio_select_change_1_listener($event) { return ctx.setType($event.option); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"aio-select\", 2);\n        i0.ɵɵlistener(\"change\", function ApiListComponent_Template_aio_select_change_2_listener($event) { return ctx.setStatus($event.option); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"input\", 4, 5);\n        i0.ɵɵlistener(\"input\", function ApiListComponent_Template_input_input_4_listener($event) { return ctx.setQuery($event.target.value); });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"i\", 6);\n        i0.ɵɵtext(7, \"search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"article\", 7);\n        i0.ɵɵtemplate(9, ApiListComponent_div_9_Template, 3, 2, \"div\", 8);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.types)(\"selected\", ctx.type)(\"showSymbol\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.statuses)(\"selected\", ctx.status)(\"disabled\", ctx.type.value === \"package\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 7, ctx.filteredSections));\n    } }, directives: [i3.SelectComponent, i4.NgForOf, i4.NgIf], pipes: [i4.AsyncPipe], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ApiListComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-api-list',\n                templateUrl: './api-list.component.html',\n            }]\n    }], function () { return [{ type: i1.ApiService }, { type: i2.LocationService }]; }, { queryEl: [{\n            type: ViewChild,\n            args: ['filter', { static: true }]\n        }] });\n","<div class=\"l-flex-wrap api-filter\">\n\n  <aio-select (change)=\"setType($event.option)\"\n              [options]=\"types\"\n              [selected]=\"type\"\n              [showSymbol]=\"true\"\n              label=\"Type:\">\n  </aio-select>\n\n  <aio-select (change)=\"setStatus($event.option)\"\n              [options]=\"statuses\"\n              [selected]=\"status\"\n              [disabled]=\"type.value === 'package'\"\n              label=\"Status:\">\n  </aio-select>\n\n  <div class=\"form-search\">\n    <input #filter placeholder=\"Filter\" (input)=\"setQuery($event.target.value)\" aria-label=\"Filter Search\">\n    <i class=\"material-icons\">search</i>\n  </div>\n</div>\n\n<article class=\"api-list-container l-content-small docs-content\">\n  <div *ngFor=\"let section of filteredSections | async\" >\n    <h2 *ngIf=\"section.items\"><a [href]=\"section.path\" [class.deprecated-api-item]=\"section.deprecated\">{{section.title}}</a></h2>\n    <ul class=\"api-list\" *ngIf=\"section.items && section.items.length\">\n      <ng-container *ngFor=\"let item of section.items\">\n        <li class=\"api-item\">\n          <a [href]=\"item.path\" [class.deprecated-api-item]=\"item.stability === 'deprecated'\">\n            <span class=\"symbol {{item.docType}}\"></span>\n            {{item.title}}\n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</article>\n","/*\n* API List & Filter Component\n*\n* A page that displays a formatted list of the public Angular API entities.\n* Clicking on a list item triggers navigation to the corresponding API entity document.\n* Can add/remove API entity links based on filter settings.\n*/\n\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\n\nimport { LocationService } from 'app/shared/location.service';\nimport { ApiItem, ApiSection, ApiService } from './api.service';\n\nimport { Option } from 'app/shared/select/select.component';\nimport { map } from 'rxjs/operators';\n\nclass SearchCriteria {\n  query ? = '';\n  status ? = 'all';\n  type ? = 'all';\n}\n\n@Component({\n  selector: 'aio-api-list',\n  templateUrl: './api-list.component.html',\n})\nexport class ApiListComponent implements OnInit {\n\n  filteredSections: Observable<ApiSection[]>;\n\n  showStatusMenu = false;\n  showTypeMenu = false;\n\n  private criteriaSubject = new ReplaySubject<SearchCriteria>(1);\n  private searchCriteria = new SearchCriteria();\n\n  status: Option;\n  type: Option;\n\n  // API types\n  types: Option[] = [\n    { value: 'all', title: 'All' },\n    { value: 'class', title: 'Class' },\n    { value: 'const', title: 'Const'},\n    { value: 'decorator', title: 'Decorator' },\n    { value: 'directive', title: 'Directive' },\n    { value: 'enum', title: 'Enum' },\n    { value: 'function', title: 'Function' },\n    { value: 'interface', title: 'Interface' },\n    { value: 'pipe', title: 'Pipe'},\n    { value: 'ngmodule', title: 'NgModule'},\n    { value: 'type-alias', title: 'Type alias' },\n    { value: 'package', title: 'Package'}\n  ];\n\n  statuses: Option[] = [\n    { value: 'all', title: 'All' },\n    { value: 'deprecated', title: 'Deprecated' },\n    { value: 'security-risk', title: 'Security Risk' }\n  ];\n\n  @ViewChild('filter', { static: true }) queryEl: ElementRef;\n\n  constructor(\n    private apiService: ApiService,\n    private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.filteredSections =\n        combineLatest([\n          this.apiService.sections,\n          this.criteriaSubject,\n        ]).pipe(\n          map( results => ({ sections: results[0], criteria: results[1]})),\n          map( results => (\n               results.sections\n                  .map(section => ({ ...section, items: this.filterSection(section, results.criteria) }))\n          ))\n        );\n\n    this.initializeSearchCriteria();\n  }\n\n  // TODO: may need to debounce as the original did\n  // although there shouldn't be any perf consequences if we don't\n  setQuery(query: string) {\n    this.setSearchCriteria({query: (query || '').toLowerCase().trim() });\n  }\n\n  setStatus(status: Option) {\n    this.toggleStatusMenu();\n    this.status = status;\n    this.setSearchCriteria({status: status.value});\n  }\n\n  setType(type: Option) {\n    this.toggleTypeMenu();\n    this.type = type;\n    this.setSearchCriteria({type: type.value});\n  }\n\n  toggleStatusMenu() {\n    this.showStatusMenu = !this.showStatusMenu;\n  }\n\n  toggleTypeMenu() {\n    this.showTypeMenu = !this.showTypeMenu;\n  }\n\n  //////// Private //////////\n\n  private filterSection(section: ApiSection, { query, status, type }: SearchCriteria) {\n    const sectionNameMatches = !query || section.name.indexOf(query) !== -1;\n\n    const matchesQuery = (item: ApiItem) =>\n      sectionNameMatches || item.name.indexOf(query!) !== -1;\n    const matchesStatus = (item: ApiItem) =>\n      status === 'all' || status === item.stability || (status === 'security-risk' && item.securityRisk);\n    const matchesType = (item: ApiItem) =>\n      type === 'all' || type === item.docType;\n\n    const items = section.items!.filter(item =>\n      matchesType(item) && matchesStatus(item) && matchesQuery(item));\n\n    // If there are no items we still return an empty array if the section name matches and the type is 'package'\n    return items.length ? items : (sectionNameMatches && type === 'package') ? [] : null;\n  }\n\n  // Get initial search criteria from URL search params\n  private initializeSearchCriteria() {\n    const {query, status, type} = this.locationService.search();\n\n    const q = (query || '').toLowerCase();\n    // Hack: can't bind to query because input cursor always forced to end-of-line.\n    this.queryEl.nativeElement.value = q;\n\n    this.status = this.statuses.find(x => x.value === status) || this.statuses[0];\n    this.type = this.types.find(x => x.value === type) || this.types[0];\n\n    this.searchCriteria = {\n      query: q,\n      status: this.status.value,\n      type: this.type.value\n    };\n\n    this.criteriaSubject.next(this.searchCriteria);\n  }\n\n  private setLocationSearch() {\n    const {query, status, type} = this.searchCriteria;\n    const params = {\n      query:  query ? query : undefined,\n      status: status !== 'all' ? status : undefined,\n      type:   type   !== 'all' ? type   : undefined\n    };\n\n    this.locationService.setSearch('API Search', params);\n  }\n\n  private setSearchCriteria(criteria: SearchCriteria) {\n    this.criteriaSubject.next(Object.assign(this.searchCriteria, criteria));\n    this.setLocationSearch();\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApiListComponent } from './api-list.component';\nimport { ApiService } from './api.service';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ ApiListComponent ],\n  entryComponents: [ ApiListComponent ],\n  providers: [ ApiService ]\n})\nexport class ApiListModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = ApiListComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ApiListComponent } from './api-list.component';\nimport { ApiService } from './api.service';\nimport * as i0 from \"@angular/core\";\nexport class ApiListModule {\n    constructor() {\n        this.customElementComponent = ApiListComponent;\n    }\n}\nApiListModule.ɵmod = i0.ɵɵdefineNgModule({ type: ApiListModule });\nApiListModule.ɵinj = i0.ɵɵdefineInjector({ factory: function ApiListModule_Factory(t) { return new (t || ApiListModule)(); }, providers: [ApiService], imports: [[CommonModule, SharedModule, HttpClientModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(ApiListModule, { declarations: [ApiListComponent], imports: [CommonModule, SharedModule, HttpClientModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(ApiListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, SharedModule, HttpClientModule],\n                declarations: [ApiListComponent],\n                entryComponents: [ApiListComponent],\n                providers: [ApiService]\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}