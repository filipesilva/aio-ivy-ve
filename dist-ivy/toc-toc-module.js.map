{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js.pre-build-optimizer.js","./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js.pre-build-optimizer.js","./src/app/custom-elements/toc/toc.component.ts.pre-build-optimizer.js","./src/app/custom-elements/toc/toc.component.html","./src/app/custom-elements/toc/toc.component.ts","./src/app/custom-elements/toc/toc.module.ts","./src/app/custom-elements/toc/toc.module.ts.pre-build-optimizer.js"],"names":["Observable","source","delayTime","scheduler","asap","super","this","isNumeric","schedule","delay","arg","subscriber","add","subscribe","dispatch","subscribeOn","lift","_c0","TocComponent_div_0_div_1_Template","rf","ctx","TocComponent_div_0_button_2_Template","_r95","ctx_r91","TocComponent_div_0_ng_container_4_li_1_Template","ctx_r100","toc_r96","$implicit","i_r97","index","ctx_r98","title","TocComponent_div_0_ng_container_4_Template","ctx_r92","TocComponent_div_0_button_5_Template","_r102","ctx_r93","TocComponent_div_0_Template","ctx_r89","TocComponent","scrollService","elementRef","tocService","activeIndex","type","isCollapsed","isEmbedded","onDestroy","Subject","primaryMax","nativeElement","className","indexOf","tocList","pipe","takeUntil","itemCount","array","fn","reduce","result","item","level","count","combineLatest","activeItemIndex","items","changes","startWith","length","e","toArray","p","offsetParent","eRect","getBoundingClientRect","pRect","top","bottom","scrollTop","clientHeight","next","canScroll","toTop","scrollToTop","ɵfac","t","ɵcmp","_t","decls","vars","consts","template","directives","encapsulation","TocModule","customElementComponent","ɵmod","ɵinj","factory"],"mappings":"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","file":"toc-toc-module.js","sourcesContent":["import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Component, ViewChildren } from '@angular/core';\nimport { asapScheduler, combineLatest, Subject } from 'rxjs';\nimport { startWith, subscribeOn, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/shared/scroll.service\";\nimport * as i2 from \"app/shared/toc.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nconst _c0 = [\"tocItem\"];\nfunction TocComponent_div_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Contents \");\n    i0.ɵɵelementEnd();\n} }\nfunction TocComponent_div_0_button_2_Template(rf, ctx) { if (rf & 1) {\n    const _r95 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TocComponent_div_0_button_2_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r95); const ctx_r94 = i0.ɵɵnextContext(2); return ctx_r94.toggle(false); });\n    i0.ɵɵtext(1, \" Contents \");\n    i0.ɵɵelement(2, \"mat-icon\", 9);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r91 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-pressed\", !ctx_r91.isCollapsed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"collapsed\", ctx_r91.isCollapsed);\n} }\nfunction TocComponent_div_0_ng_container_4_li_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 11, 12);\n    i0.ɵɵelement(2, \"a\", 13);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r100 = i0.ɵɵnextContext();\n    const toc_r96 = ctx_r100.$implicit;\n    const i_r97 = ctx_r100.index;\n    const ctx_r98 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(toc_r96.level);\n    i0.ɵɵclassProp(\"secondary\", ctx_r98.type === \"EmbeddedExpandable\" && i_r97 >= ctx_r98.primaryMax);\n    i0.ɵɵclassProp(\"active\", i_r97 === ctx_r98.activeIndex);\n    i0.ɵɵpropertyInterpolate(\"title\", toc_r96.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", toc_r96.href, i0.ɵɵsanitizeUrl)(\"innerHTML\", toc_r96.content, i0.ɵɵsanitizeHtml);\n} }\nfunction TocComponent_div_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TocComponent_div_0_ng_container_4_li_1_Template, 3, 8, \"li\", 10);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const toc_r96 = ctx.$implicit;\n    const ctx_r92 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r92.type === \"Floating\" || toc_r96.level !== \"h1\");\n} }\nfunction TocComponent_div_0_button_5_Template(rf, ctx) { if (rf & 1) {\n    const _r102 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TocComponent_div_0_button_5_Template_button_click_0_listener($event) { i0.ɵɵrestoreView(_r102); const ctx_r101 = i0.ɵɵnextContext(2); return ctx_r101.toggle(); });\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"collapsed\", ctx_r93.isCollapsed);\n    i0.ɵɵattribute(\"aria-pressed\", !ctx_r93.isCollapsed);\n} }\nfunction TocComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, TocComponent_div_0_div_1_Template, 2, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, TocComponent_div_0_button_2_Template, 3, 2, \"button\", 3);\n    i0.ɵɵelementStart(3, \"ul\", 4);\n    i0.ɵɵtemplate(4, TocComponent_div_0_ng_container_4_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TocComponent_div_0_button_5_Template, 1, 2, \"button\", 6);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r89 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"collapsed\", ctx_r89.isCollapsed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.type === \"EmbeddedSimple\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.type === \"EmbeddedExpandable\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"embedded\", ctx_r89.type !== \"Floating\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r89.tocList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r89.type === \"EmbeddedExpandable\");\n} }\nexport class TocComponent {\n    constructor(scrollService, elementRef, tocService) {\n        this.scrollService = scrollService;\n        this.tocService = tocService;\n        this.activeIndex = null;\n        this.type = 'None';\n        this.isCollapsed = true;\n        this.isEmbedded = false;\n        this.onDestroy = new Subject();\n        this.primaryMax = 4;\n        this.isEmbedded = elementRef.nativeElement.className.indexOf('embedded') !== -1;\n    }\n    ngOnInit() {\n        this.tocService.tocList\n            .pipe(takeUntil(this.onDestroy))\n            .subscribe(tocList => {\n            this.tocList = tocList;\n            const itemCount = count(this.tocList, item => item.level !== 'h1');\n            this.type = (itemCount > 0) ?\n                this.isEmbedded ?\n                    (itemCount > this.primaryMax) ?\n                        'EmbeddedExpandable' :\n                        'EmbeddedSimple' :\n                    'Floating' :\n                'None';\n        });\n    }\n    ngAfterViewInit() {\n        if (!this.isEmbedded) {\n            // We use the `asap` scheduler because updates to `activeItemIndex` are triggered by DOM changes,\n            // which, in turn, are caused by the rendering that happened due to a ChangeDetection.\n            // Without asap, we would be updating the model while still in a ChangeDetection handler, which is disallowed by Angular.\n            combineLatest([\n                this.tocService.activeItemIndex.pipe(subscribeOn(asapScheduler)),\n                this.items.changes.pipe(startWith(this.items)),\n            ])\n                .pipe(takeUntil(this.onDestroy))\n                .subscribe(([index, items]) => {\n                this.activeIndex = index;\n                if (index === null || index >= items.length) {\n                    return;\n                }\n                const e = items.toArray()[index].nativeElement;\n                const p = e.offsetParent;\n                const eRect = e.getBoundingClientRect();\n                const pRect = p.getBoundingClientRect();\n                const isInViewport = (eRect.top >= pRect.top) && (eRect.bottom <= pRect.bottom);\n                if (!isInViewport) {\n                    p.scrollTop += (eRect.top - pRect.top) - (p.clientHeight / 2);\n                }\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.onDestroy.next();\n    }\n    toggle(canScroll = true) {\n        this.isCollapsed = !this.isCollapsed;\n        if (canScroll && this.isCollapsed) {\n            this.toTop();\n        }\n    }\n    toTop() {\n        this.scrollService.scrollToTop();\n    }\n}\nTocComponent.ɵfac = function TocComponent_Factory(t) { return new (t || TocComponent)(i0.ɵɵdirectiveInject(i1.ScrollService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.TocService)); };\nTocComponent.ɵcmp = i0.ɵɵdefineComponent({ type: TocComponent, selectors: [[\"aio-toc\"]], viewQuery: function TocComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh((_t = i0.ɵɵloadQuery())) && (ctx.items = _t);\n    } }, decls: 1, vars: 1, consts: [[\"class\", \"toc-inner no-print\", 3, \"collapsed\", 4, \"ngIf\"], [1, \"toc-inner\", \"no-print\"], [\"class\", \"toc-heading embedded\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"toc-heading embedded secondary\", \"title\", \"Expand/collapse contents\", \"aria-label\", \"Expand/collapse contents\", 3, \"click\", 4, \"ngIf\"], [1, \"toc-list\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"class\", \"toc-more-items embedded material-icons\", \"title\", \"Expand/collapse contents\", \"aria-label\", \"Expand/collapse contents\", 3, \"collapsed\", \"click\", 4, \"ngIf\"], [1, \"toc-heading\", \"embedded\"], [\"type\", \"button\", \"title\", \"Expand/collapse contents\", \"aria-label\", \"Expand/collapse contents\", 1, \"toc-heading\", \"embedded\", \"secondary\", 3, \"click\"], [\"svgIcon\", \"keyboard_arrow_right\", 1, \"rotating-icon\"], [3, \"title\", \"class\", \"secondary\", \"active\", 4, \"ngIf\"], [3, \"title\"], [\"tocItem\", \"\"], [3, \"href\", \"innerHTML\"], [\"type\", \"button\", \"title\", \"Expand/collapse contents\", \"aria-label\", \"Expand/collapse contents\", 1, \"toc-more-items\", \"embedded\", \"material-icons\", 3, \"click\"]], template: function TocComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, TocComponent_div_0_Template, 6, 6, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.type !== \"None\");\n    } }, directives: [i3.NgIf, i3.NgForOf, i4.MatIcon], encapsulation: 2 });\n/*@__PURE__*/ i0.ɵsetClassMetadata(TocComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-toc',\n                templateUrl: 'toc.component.html',\n                styles: []\n            }]\n    }], function () { return [{ type: i1.ScrollService }, { type: i0.ElementRef }, { type: i2.TocService }]; }, { items: [{\n            type: ViewChildren,\n            args: ['tocItem']\n        }] });\nfunction count(array, fn) {\n    return array.reduce((result, item) => fn(item) ? result + 1 : result, 0);\n}\n","<div *ngIf=\"type !== 'None'\" class=\"toc-inner no-print\" [class.collapsed]=\"isCollapsed\">\n\n  <div *ngIf=\"type === 'EmbeddedSimple'\" class=\"toc-heading embedded\">\n    Contents\n  </div>\n\n  <button *ngIf=\"type === 'EmbeddedExpandable'\" type=\"button\" (click)=\"toggle(false)\"\n    class=\"toc-heading embedded secondary\"\n    title=\"Expand/collapse contents\"\n    aria-label=\"Expand/collapse contents\"\n    [attr.aria-pressed]=\"!isCollapsed\">\n    Contents\n    <mat-icon class=\"rotating-icon\" svgIcon=\"keyboard_arrow_right\" [class.collapsed]=\"isCollapsed\"></mat-icon>\n  </button>\n\n  <ul class=\"toc-list\" [class.embedded]=\"type !== 'Floating'\">\n    <ng-container *ngFor=\"let toc of tocList; let i = index\">\n      <li #tocItem title=\"{{toc.title}}\" *ngIf=\"type === 'Floating' || toc.level !== 'h1'\"\n        class=\"{{toc.level}}\" [class.secondary]=\"type === 'EmbeddedExpandable' && i >= primaryMax\" [class.active]=\"i === activeIndex\">\n        <a [href]=\"toc.href\" [innerHTML]=\"toc.content\"></a>\n      </li>\n    </ng-container>\n  </ul>\n\n  <button *ngIf=\"type === 'EmbeddedExpandable'\" type=\"button\" (click)=\"toggle()\"\n    class=\"toc-more-items embedded material-icons\" [class.collapsed]=\"isCollapsed\"\n    title=\"Expand/collapse contents\"\n    aria-label=\"Expand/collapse contents\"\n    [attr.aria-pressed]=\"!isCollapsed\">\n  </button>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { asapScheduler, combineLatest, Subject } from 'rxjs';\nimport { startWith, subscribeOn, takeUntil } from 'rxjs/operators';\n\nimport { ScrollService } from 'app/shared/scroll.service';\nimport { TocItem, TocService } from 'app/shared/toc.service';\n\ntype TocType = 'None' | 'Floating' | 'EmbeddedSimple' | 'EmbeddedExpandable';\n\n@Component({\n  selector: 'aio-toc',\n  templateUrl: 'toc.component.html',\n  styles: []\n})\nexport class TocComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  activeIndex: number | null = null;\n  type: TocType = 'None';\n  isCollapsed = true;\n  isEmbedded = false;\n  @ViewChildren('tocItem') private items: QueryList<ElementRef>;\n  private onDestroy = new Subject();\n  primaryMax = 4;\n  tocList: TocItem[];\n\n  constructor(\n    private scrollService: ScrollService,\n    elementRef: ElementRef,\n    private tocService: TocService) {\n    this.isEmbedded = elementRef.nativeElement.className.indexOf('embedded') !== -1;\n  }\n\n  ngOnInit() {\n    this.tocService.tocList\n        .pipe(takeUntil(this.onDestroy))\n        .subscribe(tocList => {\n          this.tocList = tocList;\n          const itemCount = count(this.tocList, item => item.level !== 'h1');\n\n          this.type = (itemCount > 0) ?\n                        this.isEmbedded ?\n                          (itemCount > this.primaryMax) ?\n                            'EmbeddedExpandable' :\n                          'EmbeddedSimple' :\n                        'Floating' :\n                      'None';\n        });\n  }\n\n  ngAfterViewInit() {\n    if (!this.isEmbedded) {\n      // We use the `asap` scheduler because updates to `activeItemIndex` are triggered by DOM changes,\n      // which, in turn, are caused by the rendering that happened due to a ChangeDetection.\n      // Without asap, we would be updating the model while still in a ChangeDetection handler, which is disallowed by Angular.\n      combineLatest([\n        this.tocService.activeItemIndex.pipe(subscribeOn(asapScheduler)),\n        this.items.changes.pipe(startWith(this.items)),\n      ])\n          .pipe(takeUntil(this.onDestroy))\n          .subscribe(([index, items]) => {\n            this.activeIndex = index;\n            if (index === null || index >= items.length) {\n              return;\n            }\n\n            const e = items.toArray()[index].nativeElement;\n            const p = e.offsetParent;\n\n            const eRect = e.getBoundingClientRect();\n            const pRect = p.getBoundingClientRect();\n\n            const isInViewport = (eRect.top >= pRect.top) && (eRect.bottom <= pRect.bottom);\n\n            if (!isInViewport) {\n              p.scrollTop += (eRect.top - pRect.top) - (p.clientHeight / 2);\n            }\n          });\n    }\n  }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n  }\n\n  toggle(canScroll = true) {\n    this.isCollapsed = !this.isCollapsed;\n    if (canScroll && this.isCollapsed) { this.toTop(); }\n  }\n\n  toTop() {\n    this.scrollService.scrollToTop();\n  }\n}\n\nfunction count<T>(array: T[], fn: (item: T) => boolean) {\n  return array.reduce((result, item) => fn(item) ? result + 1 : result, 0);\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { WithCustomElementComponent } from '../element-registry';\nimport { TocComponent } from './toc.component';\n\n@NgModule({\n  imports: [ CommonModule, MatIconModule ],\n  declarations: [ TocComponent ],\n  entryComponents: [ TocComponent ],\n})\nexport class TocModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = TocComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TocComponent } from './toc.component';\nimport * as i0 from \"@angular/core\";\nexport class TocModule {\n    constructor() {\n        this.customElementComponent = TocComponent;\n    }\n}\nTocModule.ɵmod = i0.ɵɵdefineNgModule({ type: TocModule });\nTocModule.ɵinj = i0.ɵɵdefineInjector({ factory: function TocModule_Factory(t) { return new (t || TocModule)(); }, imports: [[CommonModule, MatIconModule]] });\n/*@__PURE__*/ i0.ɵɵsetNgModuleScope(TocModule, { declarations: [TocComponent], imports: [CommonModule, MatIconModule] });\n/*@__PURE__*/ i0.ɵsetClassMetadata(TocModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatIconModule],\n                declarations: [TocComponent],\n                entryComponents: [TocComponent],\n            }]\n    }], null, null);\n"],"sourceRoot":"webpack:///"}